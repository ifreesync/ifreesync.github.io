<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux环境搭建-Redis安装教程</title>
    <url>/posts/65404/</url>
    <content><![CDATA[<blockquote>
<p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。和Memcached类似。Redis支持存储的value类型相对更多，包括string(字符串)、hash(哈希)、list(链表)、set(集合)和zset(有序集合)</p>
</blockquote>
<span id="more"></span>

<h2 id="安装软件准备"><a href="#安装软件准备" class="headerlink" title="安装软件准备"></a>安装软件准备</h2><p><a href="https://redis.io/download/">Redis下载地址</a></p>
<p>选择一个比较稳定的版本进行下载，我这里选择的最新稳定版redis-7.2.0.tar.gz。</p>
<p>下载完成后将安装压缩包上传至服务器指定目录&#x2F;home&#x2F;softwares&#x2F;下。</p>
<p>进入服务器安装软件存放目录下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/softwares/</span><br></pre></td></tr></table></figure>

<p>解压压缩包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -axvf redis-7.2.0.tar.gz </span><br></pre></td></tr></table></figure>

<p>将解压文件移动至&#x2F;usr&#x2F;local&#x2F;目录下并重命名为redis：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv redis-7.2.0 /usr/local/redis</span><br></pre></td></tr></table></figure>

<h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>进入到&#x2F;usr&#x2F;local&#x2F;redis&#x2F;目录下进行编译与安装。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/redis/</span><br></pre></td></tr></table></figure>

<p>编译并安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>这里编译时间比较长需要耐心等待一下。</p>
<h2 id="将Redis安装为系统服务并后台启动"><a href="#将Redis安装为系统服务并后台启动" class="headerlink" title="将Redis安装为系统服务并后台启动"></a>将Redis安装为系统服务并后台启动</h2><p>进⼊utils⽬录，并执⾏如下脚本即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd utils/</span><br><span class="line">./install_server.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458056.png" alt="image-20230831115145463"></p>
<p>执行脚本之后发现报错。</p>
<p>解决方案：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim install_server.sh </span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458057.png" alt="image-20230831115500498"></p>
<p>将这几行代码注释掉</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458058.png" alt="image-20230831115547882"></p>
<p>保存退出，再次执行脚本文件，一路回车。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./install_server.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458059.png" alt="image-20230831115736321"></p>
<p>安装成功。</p>
<h2 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start redis_6379.service</span><br></pre></td></tr></table></figure>

<p>查看Redis服务状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status redis_6379.service</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458060.png" alt="image-20230831142804292"></p>
<h2 id="启动Redis客户端并测试"><a href="#启动Redis客户端并测试" class="headerlink" title="启动Redis客户端并测试"></a>启动Redis客户端并测试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458061.png" alt="image-20230831143006474"></p>
<h2 id="修改redis-config相关配置"><a href="#修改redis-config相关配置" class="headerlink" title="修改redis.config相关配置"></a>修改redis.config相关配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/redis/6379.conf</span><br></pre></td></tr></table></figure>

<p>开启redis远程访问服务</p>
<p>将配置文件bind 127.0.0.1 -::1修改成bind 0.0.0.0或者直接将这行注释掉。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458062.png" alt="image-20230831143457137"></p>
<p>将配置文件protected-mode 设置成no（默认是设置成yes的， 防止了远程访问，在redis3.2.3版本后）</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458063.png" alt="image-20230831143634264"></p>
<p>将配置文件中的daemonize属性改为yes（表明需要在后台运行）</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458064.png" alt="image-20230831144123316"></p>
<p>修改Redis默认密码 (默认密码为空)</p>
<p>（1）在配置文件中找到这一行 # requirepass foobared</p>
<p>（2）删除前面的注释符号#，并把foobared修改成自己的密码  或者  另起一行 requirepass 自己的密码</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458065.png" alt="image-20230831143906151"></p>
<p>保存并退出，重启redis。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart redis_6379.service</span><br></pre></td></tr></table></figure>

<h2 id="开放服务器端口"><a href="#开放服务器端口" class="headerlink" title="开放服务器端口"></a>开放服务器端口</h2><p>在你的服务器供应商网站上，添加一条防火墙规则，开放Redis 6379端口。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458066.png" alt="image-20230831145443759"></p>
<h2 id="远程连接测试"><a href="#远程连接测试" class="headerlink" title="远程连接测试"></a>远程连接测试</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311458067.png" alt="image-20230831145411721"></p>
<p>至此Redis就安装完成。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-Nginx安装教程</title>
    <url>/posts/4580/</url>
    <content><![CDATA[<blockquote>
<p>Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务。</p>
</blockquote>
<span id="more"></span>

<h2 id="安装软件准备"><a href="#安装软件准备" class="headerlink" title="安装软件准备"></a>安装软件准备</h2><p><a href="https://nginx.org/en/download.html">Nginx下载地址</a></p>
<p>我这里选择的是nginx-1.8.0.tar.gz版本，下载完成后上传至服务器指定文件目录&#x2F;home&#x2F;softwares下。</p>
<p>然后进入服务器到&#x2F;home&#x2F;softwares&#x2F;目录下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/softwares/</span><br></pre></td></tr></table></figure>

<p>解压安装软件包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf nginx-1.8.0.tar.gz</span><br></pre></td></tr></table></figure>

<h2 id="安装所需插件"><a href="#安装所需插件" class="headerlink" title="安装所需插件"></a>安装所需插件</h2><h3 id="安装gcc编译器。"><a href="#安装gcc编译器。" class="headerlink" title="安装gcc编译器。"></a>安装gcc编译器。</h3><p>gcc编译器是一款开源的编程语言编译器，常用于编译C、C++、Objective-C等语言。它是GNU组织的一部分，被广泛用于各种操作系统中。</p>
<p>检查gcc版本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308301052118.png" alt="image-20230830101111440"></p>
<p>一般CentOS7都是自带有gcc的，如果没有则自行安装。</p>
<p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install gcc</span><br></pre></td></tr></table></figure>

<h3 id="安装pcre、pcre-devel"><a href="#安装pcre、pcre-devel" class="headerlink" title="安装pcre、pcre-devel"></a>安装pcre、pcre-devel</h3><p>pcre是一个perl库，包括perl兼容的正则表达式库，nginx的http模块使用pcre来解析正则表达式。</p>
<p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure>

<h3 id="安装zlib"><a href="#安装zlib" class="headerlink" title="安装zlib"></a>安装zlib</h3><p>zlib库提供了很多种压缩和解压缩方式nginx使用zlib对http包的内容进行gzip。</p>
<p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure>

<h3 id="安装openssl"><a href="#安装openssl" class="headerlink" title="安装openssl"></a>安装openssl</h3><p>在计算机网络上，OpenSSL是一个开放源代码的软件库包，应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。这个包广泛被应用在互联网的网页服务器上。</p>
<p>安装命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>进入Nginx安装解压文件目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/softwares/nginx-1.8.0/</span><br></pre></td></tr></table></figure>

<p>分别执行以下三个命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>–prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx：指定安装目录为&#x2F;usr&#x2F;local&#x2F;nginx。</p>
<p>–with-http_stub_status_module –with-http_ssl_module：开启Nginx的ssl功能。</p>
<h2 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h2><p>切换目录到&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin下面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin/</span><br></pre></td></tr></table></figure>

<p>启动Nginx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./nginx </span><br></pre></td></tr></table></figure>

<p>查看Nginx是否启动成功：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308301052119.png" alt="image-20230830102822235"></p>
<p>访问服务器IP：</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308301052120.png" alt="image-20230830102845827"></p>
<p>如图表示Nginx启动成功。</p>
<h2 id="设置Nginx软链接"><a href="#设置Nginx软链接" class="headerlink" title="设置Nginx软链接"></a>设置Nginx软链接</h2><p>软链接是Linux中常用的命令，它的功能是某一文件在另外一个位置建立一个同步的链接，相当于C语言中的指针，建立的链接直接指向源文件所在的地址，软链接不会另外占用资源，当同一文件需要在多个位置被用到的时候，就会使用到软连接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/</span><br></pre></td></tr></table></figure>

<p>这样使用到Nginx的命令时不需要每次都切换到Nginx的sbin目录下。</p>
<h2 id="Nginx常用命令"><a href="#Nginx常用命令" class="headerlink" title="Nginx常用命令"></a>Nginx常用命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -s reload  # 向主进程发送信号，重新加载配置文件，热重启</span><br><span class="line">nginx -s reopen	 # 重启 Nginx</span><br><span class="line">nginx -s stop    # 快速关闭</span><br><span class="line">nginx -s quit    # 等待工作进程处理完成后关闭</span><br><span class="line">nginx -T         # 查看当前 Nginx 最终的配置</span><br><span class="line">nginx -t         # 检查配置是否有问题</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-MySQL安装教程</title>
    <url>/posts/4439/</url>
    <content><![CDATA[<blockquote>
<p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p>
</blockquote>
<span id="more"></span>

<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><a href="https://downloads.mysql.com/archives/community/">MySQL下载地址</a></p>
<p>我这里选择的是5.7.30版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291423824.png" alt="image-20230829142335284"></p>
<p>下载完成后，将MySQL上传到服务器指定位置&#x2F;home&#x2F;softwares目录下。</p>
<h2 id="卸载系统⾃带的MARIADB（如果有）"><a href="#卸载系统⾃带的MARIADB（如果有）" class="headerlink" title="卸载系统⾃带的MARIADB（如果有）"></a>卸载系统⾃带的MARIADB（如果有）</h2><p>如果系统之前⾃带 Mariadb ，可以先进行卸载。</p>
<p>查询已安装的 Mariadb 安装包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa|grep mariadb</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291524703.png" alt="image-20230829143425204"></p>
<p>将其卸载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y remove mariadb-libs.x86_64 </span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525779.png" alt="image-20230829143743996"></p>
<h2 id="解压MySQL安装包"><a href="#解压MySQL安装包" class="headerlink" title="解压MySQL安装包"></a>解压MySQL安装包</h2><p>将准备好的MySQL安装包解压至&#x2F;usr&#x2F;local目录下并重命名为mysql。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /home/softwares/mysql-5.7.30-linux-glibc2.12-x86_64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure>

<p>进入&#x2F;usr&#x2F;local目录下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/</span><br></pre></td></tr></table></figure>

<p>重命名MySQL解压文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv mysql-5.7.30-linux-glibc2.12-x86_64/ mysql</span><br></pre></td></tr></table></figure>

<h2 id="创建MySQL⽤户和⽤户组"><a href="#创建MySQL⽤户和⽤户组" class="headerlink" title="创建MySQL⽤户和⽤户组"></a>创建MySQL⽤户和⽤户组</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -g mysql mysql</span><br></pre></td></tr></table></figure>

<p>同时在&#x2F;usr&#x2F;local&#x2F;mysql目录下新建data目录备用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure>

<h2 id="修改MySQL⽬录的归属⽤户"><a href="#修改MySQL⽬录的归属⽤户" class="headerlink" title="修改MySQL⽬录的归属⽤户"></a>修改MySQL⽬录的归属⽤户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown -R mysql:mysql ./</span><br></pre></td></tr></table></figure>

<h2 id="准备MySQL的配置⽂件"><a href="#准备MySQL的配置⽂件" class="headerlink" title="准备MySQL的配置⽂件"></a>准备MySQL的配置⽂件</h2><p>在 &#x2F;etc ⽬录下新建 my.cnf ⽂件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure>

<p>配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line">skip-name-resolve</span><br><span class="line">#设置3306端⼝</span><br><span class="line">port = 3306</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"># 设置mysql的安装⽬录</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line"># 设置mysql数据库的数据的存放⽬录</span><br><span class="line">datadir=/usr/local/mysql/data</span><br><span class="line"># 允许最⼤连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 服务端使⽤的字符集默认为8⽐特编码的latin1字符集</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使⽤的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">lower_case_table_names=1</span><br><span class="line">max_allowed_packet=16M</span><br></pre></td></tr></table></figure>

<p>保存并退出。</p>
<p>同时使⽤如下命令创建 &#x2F;var&#x2F;lib&#x2F;mysql ⽬录，并修改权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/lib/mysql</span><br><span class="line">chmod 777 /var/lib/mysql</span><br></pre></td></tr></table></figure>

<h2 id="正式开始安装MySQL"><a href="#正式开始安装MySQL" class="headerlink" title="正式开始安装MySQL"></a>正式开始安装MySQL</h2><p>执⾏如下命令正式开始安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/mysql</span><br><span class="line">./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525370.png" alt="image-20230829145635632"></p>
<h2 id="复制启动脚本到资源⽬录"><a href="#复制启动脚本到资源⽬录" class="headerlink" title="复制启动脚本到资源⽬录"></a>复制启动脚本到资源⽬录</h2><p>执行如下命令复制：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp ./support-files/mysql.server /etc/init.d/mysqld</span><br></pre></td></tr></table></figure>

<p>并修改 &#x2F;etc&#x2F;init.d&#x2F;mysqld ，修改其 basedir 和 datadir 为实际对应⽬录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/usr/local/mysql/data</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525042.png" alt="image-20230829150543273"></p>
<h2 id="设置MySQL系统服务并开启⾃启"><a href="#设置MySQL系统服务并开启⾃启" class="headerlink" title="设置MySQL系统服务并开启⾃启"></a>设置MySQL系统服务并开启⾃启</h2><p>⾸先增加 mysqld 服务控制脚本执⾏权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/init.d/mysqld</span><br></pre></td></tr></table></figure>

<p>同时将 mysqld 服务加⼊到系统服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --add mysqld</span><br></pre></td></tr></table></figure>

<p>最后检查 mysqld 服务是否已经⽣效即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --list mysqld</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291527368.png" alt="image-20230829150807691"></p>
<p>这样就表明 mysqld 服务已经⽣效了，在2、3、4、5运⾏级别随系统启动⽽⾃动启动，以后可以直接使⽤ service 命令控制 mysql 的启停。</p>
<h2 id="启动MYSQLD"><a href="#启动MYSQLD" class="headerlink" title="启动MYSQLD"></a>启动MYSQLD</h2><p>直接执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service mysqld start</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525256.png" alt="image-20230829151028412"></p>
<h2 id="将MySQL的BIN⽬录加⼊PATH环境变量"><a href="#将MySQL的BIN⽬录加⼊PATH环境变量" class="headerlink" title="将MySQL的BIN⽬录加⼊PATH环境变量"></a>将MySQL的BIN⽬录加⼊PATH环境变量</h2><p>这样⽅便以后在任意⽬录上都可以使⽤ mysql 提供的命令。</p>
<p>编辑 ~&#x2F;.bash_profile ⽂件，在⽂件末尾处追加如下信息:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/mysql/bin</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525202.png" alt="image-20230829151222506"></p>
<p>执行如下命令使配置生效：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>

<h2 id="⾸次登陆MySQL"><a href="#⾸次登陆MySQL" class="headerlink" title="⾸次登陆MySQL"></a>⾸次登陆MySQL</h2><p>以 root 账户登录 mysql ，使⽤上⽂安装完成提示的密码进⾏登⼊。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525876.png" alt="image-20230829151510166"></p>
<h2 id="修改root账户密码"><a href="#修改root账户密码" class="headerlink" title="修改root账户密码"></a>修改root账户密码</h2><p>在mysql的命令⾏执⾏如下命令即可，密码可以换成你想⽤的密码即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user user() identified by &quot;MySQL@123456&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525673.png" alt="image-20230829151736670"></p>
<h2 id="设置远程主机登录"><a href="#设置远程主机登录" class="headerlink" title="设置远程主机登录"></a>设置远程主机登录</h2><p>使用如下命令进行设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set user.Host=&#x27;%&#x27; where user.User=&#x27;root&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291525532.png" alt="image-20230829152002924"></p>
<h2 id="开放服务器端口"><a href="#开放服务器端口" class="headerlink" title="开放服务器端口"></a>开放服务器端口</h2><p>在你的服务器供应商网站上，添加一条防火墙规则，开放MySQL 3306端口。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308311457863.png" alt="image-20230831145306372"></p>
<h2 id="远程连接测试"><a href="#远程连接测试" class="headerlink" title="远程连接测试"></a>远程连接测试</h2><p>最后利用Navicat进行连接测试。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202308291526961.png" alt="image-20230829152255453"></p>
<p>至此，我们的MySQL安装就已经全部完成了！</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>MySQL</tag>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Git设置用户名和邮箱</title>
    <url>/posts/14423/</url>
    <content><![CDATA[<blockquote>
<p>Git全局设置用户名、邮箱。</p>
</blockquote>
<span id="more"></span>

<h2 id="查看Git配置信息"><a href="#查看Git配置信息" class="headerlink" title="查看Git配置信息"></a>查看Git配置信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202306271431875.png" alt="image-20230627141915523"></p>
<h2 id="查看Git用户名、邮箱"><a href="#查看Git用户名、邮箱" class="headerlink" title="查看Git用户名、邮箱"></a>查看Git用户名、邮箱</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202306271431876.png" alt="image-20230627142112688"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.email</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202306271431877.png" alt="image-20230627142158948"></p>
<h2 id="全局设置用户名、邮箱"><a href="#全局设置用户名、邮箱" class="headerlink" title="全局设置用户名、邮箱"></a>全局设置用户名、邮箱</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;ryanwang&quot;</span><br><span class="line">git config --global user.email &quot;ifreesync@hotmail.com&quot;</span><br></pre></td></tr></table></figure>

<p>修改用户名和邮箱的命令同设置用户名和邮箱命令一样，没有用户名就添加，有就修改。</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Do not stand at my grave and weep</title>
    <url>/posts/45091/</url>
    <content><![CDATA[<p>Do not stand at my grave and weep,</p>
<p>I am not there, I do not sleep.</p>
<span id="more"></span>

<p>I am in a thousand winds that blow,</p>
<p>I am the softly falling snow.</p>
<p>I am the gentle showers of rain,</p>
<p>I am the fields of ripening grain.</p>
<p>I am in the morning hush,</p>
<p>I am in the graceful rush</p>
<p>Of beautiful birds in circling flight,</p>
<p>I am the starshine of the night.</p>
<p>I am in the flowers that bloom,</p>
<p>I am in a quiet room.</p>
<p>I am in the birds that sing,</p>
<p>I am in each lovely thing.</p>
<p>Do not stand at my grave and cry,</p>
<p>I am not there. I do not die.</p>
]]></content>
      <categories>
        <category>English Poetry</category>
      </categories>
      <tags>
        <tag>英语学习</tag>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows装机必备软件</title>
    <url>/posts/43345/</url>
    <content><![CDATA[<blockquote>
<p>本文主要是记录自己Windows平台下一些常用的，不错的软件。如果有需要可以自行下载安装。</p>
</blockquote>
<span id="more"></span>

<h2 id="CPU-Z"><a href="#CPU-Z" class="headerlink" title="CPU-Z"></a>CPU-Z</h2><h3 id="官网地址"><a href="#官网地址" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.cpuid.com/softwares/cpu-z.html">CPU-Z官网地址</a></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>CPU-Z是一个免费软件，可以收集有关您系统的一些主要设备的信息。</p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul>
<li>获取处理器名称和编号、代号、进程、包、高速缓存级别。</li>
<li>获取主板和芯片组。</li>
<li>获取内存类型、大小、时序和模块规格 (SPD)。</li>
<li>实时测量每个内核的内部频率、显存频率。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718364.png" alt="image-20230519153336621"></p>
<h2 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a>火绒</h2><h3 id="官网地址-1"><a href="#官网地址-1" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.huorong.cn/">火绒官网地址</a></p>
<h3 id="特征-1"><a href="#特征-1" class="headerlink" title="特征"></a>特征</h3><ul>
<li>干净 Pure<ul>
<li>无任何具有广告推广性质的弹窗和捆绑等打扰用户行为</li>
</ul>
</li>
<li>轻巧 Light<ul>
<li>占用资源少，不影响日常办公、游戏</li>
</ul>
</li>
<li>简单 Simple<ul>
<li>一键下载，安装后使用默认配置即可获得安全防护</li>
</ul>
</li>
<li>易用 Intuitive<ul>
<li>产品性能历经数次优化，兼容性好，运行流畅</li>
</ul>
</li>
</ul>
<h3 id="产品功能"><a href="#产品功能" class="headerlink" title="产品功能"></a>产品功能</h3><ul>
<li>病毒查杀<ul>
<li>一键扫描、查杀病毒，基于“通用脱壳”、“行为沙盒”的纯本地反病毒引擎，不受断网环境影响。</li>
</ul>
</li>
<li>防护中心<ul>
<li>文件实时监控：程序运行前及时扫描，拦截病毒。</li>
<li>U盘保护：对接入电脑的U第一时间进行扫描。</li>
<li>应用加固：对浏览器、办公软件、设计软件等程序进行保护。</li>
<li>软件安装拦截：实时监控并提示软件安装行为。</li>
<li>浏览器保护：保护您常用的浏览器与搜索引擎不被篡改。</li>
<li>网络入侵拦截：阻止病毒、黑客通过系统漏洞进入电脑，并解析出攻击源IP地址。</li>
<li>暴破攻击防护：阻止黑客通过弱口令暴破入侵系统。</li>
<li>······</li>
</ul>
</li>
<li>访问控制<ul>
<li>自定义电脑的使用权限，让您充分控制自己的电脑不被他人随意使用。</li>
<li>控制上网时间长与时间段。</li>
<li>限制访问指定网站。</li>
<li>限制指定程序运行。</li>
<li>管理U盘的接入权限。</li>
</ul>
</li>
<li>安全工具<ul>
<li>提供实用的系统、网络管理小工具。</li>
<li>弹窗拦截：拦截烦人的弹窗。</li>
<li>漏洞修复：及时修复系统高危漏洞。</li>
<li>启动项管理：管理开机启动项目，优化开机时间。</li>
<li>文件粉碎：强制删除或者彻底粉碎用户不需要的文件。</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718365.png" alt="image-20230519152245266"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718366.png" alt="image-20230519152254741"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718367.png" alt="image-20230519152301921"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718369.png" alt="image-20230519152309605"></p>
<h2 id="Internet-Download-Manager"><a href="#Internet-Download-Manager" class="headerlink" title="Internet Download Manager"></a>Internet Download Manager</h2><h3 id="官网地址-2"><a href="#官网地址-2" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.internetdownloadmanager.com/">Internet Download Manager 官网地址</a></p>
<h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>Internet Download Manager, 简称IDM,是国外的一款优秀下载工具，支持多媒体下载、自动捕获链接、自动识别文件名、静默下载、批量下载、计划下载任务、站点抓取、队列等众多功能。</p>
<h3 id="特征-2"><a href="#特征-2" class="headerlink" title="特征"></a>特征</h3><ul>
<li>下载队列</li>
<li>站点抓取</li>
<li>映射服务器</li>
<li>支持多款浏览器</li>
<li>支持多线程下载，最大32线程</li>
<li>支持多媒体下载</li>
<li>自取捕获链接</li>
<li>自动识别文件名</li>
<li>静默下载</li>
<li>批量下载</li>
<li>计划下载</li>
<li>自动根据文件后缀分类，如视频、音频、压缩文件、文档、程序等</li>
<li>无弹窗广告，干净清爽</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718370.png" alt="image-20230519153929710"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718371.png" alt="image-20230519153958146"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718372.png" alt="image-20230519154011633"></p>
<h2 id="SumatraPDF"><a href="#SumatraPDF" class="headerlink" title="SumatraPDF"></a>SumatraPDF</h2><h3 id="官网地址-3"><a href="#官网地址-3" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.sumatrapdfreader.org/free-pdf-reader">SumatraPDF官网地址</a></p>
<h3 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h3><p>Sumatra PDF 是一款开源、免费、体积小巧、启动极为迅速的 Windows 平台上经典的电子书阅读器软件。它不仅支持阅读 PDF 格式文档，同时还能支持 ePub、Mobi、CHM、XPS、DjVu 文档，CBZ、CBR 漫画等众多主流电子书格式。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718373.png" alt="homepage"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718374.png" alt="format-pdf"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718375.png" alt="format-epub"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718376.png" alt="menu-file"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718377.png" alt="menu-view"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718378.png" alt="dialog-langs"></p>
<h2 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h2><h3 id="官网地址-4"><a href="#官网地址-4" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.sublimetext.com/">Sublime Text官网地址</a></p>
<h3 id="介绍-3"><a href="#介绍-3" class="headerlink" title="介绍"></a>介绍</h3><p>Sublime Text是一个文本编辑器，同时也是一个先进的代码编辑器。支持多种语言。它具有简洁和优雅的界面设计，并且拥有很多强大的特性，例如代码缩进、代码折叠、书签、宏、代码提示等。它支持插件扩展，能够方便地完成很多高级编辑器所不具备的功能。</p>
<h3 id="特征-3"><a href="#特征-3" class="headerlink" title="特征"></a>特征</h3><ul>
<li>图形处理器渲染<ul>
<li>在渲染界面时，Sublime Text 现在可以在 Linux、Mac 和 Windows 上使用你的 GPU。这导致了流畅的用户界面，一直到 8K 分辨率，同时使用比以前更少的功率。</li>
</ul>
</li>
<li>APPLE SILICON 和 LINUX ARM64<ul>
<li>Mac 版 Sublime Text 现在包括对 Apple Silicon 处理器的原生支持。Linux ARM64 版本也可用于 Raspberry Pi 等设备。</li>
</ul>
</li>
<li>选项卡多选<ul>
<li>文件选项卡已得到增强，可轻松实现拆分视图，并在整个界面和内置命令中提供支持。侧栏、标签栏、Goto Anything、Goto Definition、自动完成等都经过调整，使代码导航比以往更轻松、更直观。</li>
</ul>
</li>
<li>上下文感知自动完成<ul>
<li>自动完成引擎已被重写以提供基于项目中现有代码的智能完成。建议还增加了有关其种类的信息，并提供指向定义的链接。</li>
</ul>
</li>
<li>刷新用户的界面<ul>
<li>Default 和 Adaptive 主题已使用新的选项卡样式和非活动窗格调暗进行了刷新。主题和配色方案支持自动暗模式切换。Windows 和 Linux 上的自适应主题现在具有自定义标题栏。</li>
</ul>
</li>
<li>TYPESCRIPT、JSX 和 TSX 支持<ul>
<li>现在默认提供对一种最流行的新编程语言的支持。在现代 JavaScript 生态系统中利用 Sublime Text 的所有基于语法的智能功能。</li>
</ul>
</li>
<li>超级语法定义<ul>
<li>语法突出显示引擎已得到显着改进，具有处理不确定性语法、多行构造、惰性嵌入和语法继承等新功能。内存使用量已减少，加载时间比以往更快。</li>
</ul>
</li>
</ul>
<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><h3 id="官网地址-5"><a href="#官网地址-5" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://typora.io/">Typora官网地址</a></p>
<h3 id="介绍-4"><a href="#介绍-4" class="headerlink" title="介绍"></a>介绍</h3><p>Typora是一款轻便简洁的Markdown编辑器。</p>
<p>Typora支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别，将写作与预览窗口相结合，为用户呈现所见即所得的编辑模式，支持Markdown的各种基础语法，支持快捷键操作，是好用的一款Markdown编辑器。</p>
<h3 id="特征-4"><a href="#特征-4" class="headerlink" title="特征"></a>特征</h3><ul>
<li><strong>可读可写</strong> -Typora 为您提供读者和作者的无缝体验。它删除了预览窗口、模式切换器、markdown 源代码的语法符号以及所有其他不必要的干扰。相反，它提供了一个真正的实时预览功能来帮助您专注于内容本身。<ul>
<li>无干扰</li>
<li>无缝实时预览</li>
<li>所见即所得</li>
</ul>
</li>
<li><strong>简单而强大</strong> -提供了丰富的内容支持。<ul>
<li>图片</li>
<li>标头</li>
<li>列表</li>
<li>表格</li>
<li>代码</li>
<li>数学公式</li>
<li>图表</li>
<li>内联样式</li>
<li>······</li>
</ul>
</li>
<li><strong>辅助功能</strong><ul>
<li>组织文件<ul>
<li>Typora 让您轻松管理您的文件，同时提供文件树面板和文章（文件列表）侧面板。以您自己的方式随意组织文件，包括使用同步服务，如 Dropbox 或 iCloud。</li>
</ul>
</li>
<li>大纲面板<ul>
<li>在大纲面板中自动查看文档的大纲结构，使您可以快速浏览文档并一键跳转到任何部分。</li>
</ul>
</li>
<li>导入 &amp; 导出<ul>
<li>导出为带书签的 PDF。更进一步，导出或导入。可以导出或导入更多格式，包括 docx、OpenOffice、LaTeX、MediaWiki、Epub 等。</li>
</ul>
</li>
<li>字数统计<ul>
<li>查看文档的字数、字符数、行数或阅读分钟数。</li>
</ul>
</li>
<li>对焦模式和打字机模式<ul>
<li>焦点模式通过模糊其他行来帮助您仅关注当前行。打字机模式始终将当前活动行保持在窗口中间。</li>
</ul>
</li>
<li>自动配对<ul>
<li>像代码编辑器一样自动完成一对括号和引号。此外，还有一个选项可以自动配对降价符号，例如 * 或 _。</li>
</ul>
</li>
</ul>
</li>
<li><strong>自定义主题</strong></li>
</ul>
<h2 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h2><h3 id="官网地址-6"><a href="#官网地址-6" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.snipaste.com/">Snipaste官网地址</a></p>
<h3 id="介绍-5"><a href="#介绍-5" class="headerlink" title="介绍"></a>介绍</h3><p>Snipaste 是一个简单但功能强大的截图工具，还允许您将屏幕截图固定回屏幕上。下载并启动应用程序，按<code>F1</code>开始截图，然后按<code>F3</code>将其粘贴为浮动窗口。就是这样！</p>
<p>您还可以将剪贴板中的文本或颜色信息转换为浮动图像窗口。这样的窗口可以缩放、旋转、翻转、半透明，甚至可以点击！如果您是程序员、设计师或任何在计算机前工作很长时间的人，您会惊讶于它如何帮助您更高效地完成工作！</p>
<p>Snipaste 使用起来简单直观，但也有许多隐藏功能可以让您的生活更加高效。 如果您有兴趣， 请阅读<a href="https://docs.snipaste.com/">手册。</a></p>
<h3 id="特征-5"><a href="#特征-5" class="headerlink" title="特征"></a>特征</h3><p>直观的截图</p>
<ul>
<li>自动检测 UI 元素</li>
<li>像素级控制</li>
<li>颜色选择器（尝试<code>F1</code>, <code>C</code>, <code>F3</code>）</li>
<li><strong>历史回放</strong>( <code>,</code>&#x2F; <code>.</code>)</li>
<li>多屏支持</li>
<li>HiDPI（视网膜显示）支持</li>
</ul>
<p><img src="https://i.v2ex.co/54QM64O3.png" alt="img"></p>
<p>将图像粘贴为最顶部的浮动窗口</p>
<ul>
<li>来源（在剪贴板中）可以是<ul>
<li>图像</li>
<li>纯文本</li>
<li>HTML 文本</li>
<li>颜色信息文本</li>
<li>图片文件：PNG、JPG、BMP、TGA、ICO、TIFF 和<strong>GIF</strong></li>
</ul>
</li>
<li>支持的操作<ul>
<li>缩放 (<code>mouse scroll</code>或<code>+</code>&#x2F; <code>-</code>)<br>或设置 GIF 速度</li>
<li>旋转 ( <code>1</code>&#x2F; <code>2</code>)<br>或跳转到 GIF 的上一帧&#x2F;下一帧</li>
<li>翻转 ( <code>3</code>&#x2F; <code>4</code>)</li>
<li>设置透明度（<code>Ctrl</code>+<code>mouse scroll</code>或<code>Ctrl</code>+ <code>+</code>&#x2F; <code>-</code>）</li>
<li>鼠标点击（<code>X</code>，并用于<code>F4</code>取消）</li>
<li>图像编辑 ( <code>Space</code>)</li>
<li>缩略图模式 ( <code>Shift</code>+ <code>Double click</code>)</li>
<li>隐藏 ( <code>Double click</code>)</li>
<li>…</li>
</ul>
</li>
<li>拾色器 ( <code>Alt</code>)</li>
<li>拖放</li>
<li>分组</li>
<li>自动备份和恢复</li>
</ul>
<p><img src="https://i.v2ex.co/Bar9ulo7.png" alt="img"></p>
<p>简单的图像标注</p>
<ul>
<li>丰富的造型<ul>
<li>长方形</li>
<li>椭圆</li>
<li>线条</li>
<li>箭</li>
<li>铅笔</li>
<li>记号笔</li>
<li>文本</li>
</ul>
</li>
<li>高级注释工具<ul>
<li>马赛克</li>
<li>高斯模糊</li>
<li>橡皮</li>
</ul>
</li>
<li>撤销重做</li>
</ul>
<p><img src="https://i.v2ex.co/746553IP.png" alt="img"></p>
<p>客制化</p>
<ul>
<li>主题颜色、界面字体、托盘图标等</li>
<li>热键</li>
<li>详细的功能选项</li>
<li>想要更多选择？告诉<a href="https://github.com/liulex/Snipaste-Feedback/issues">我</a>！</li>
</ul>
<p><img src="https://i.v2ex.co/5Z3rCk0Z.png" alt="img"></p>
<h2 id="BANDIZIP"><a href="#BANDIZIP" class="headerlink" title="BANDIZIP"></a>BANDIZIP</h2><h3 id="官网地址-7"><a href="#官网地址-7" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://en.bandisoft.com/bandizip/">BANDIZIP官网地址</a></p>
<h3 id="介绍-6"><a href="#介绍-6" class="headerlink" title="介绍"></a>介绍</h3><p>Bandizip 是一个强大的存档器，提供超快的处理速度和方便的功能。免费提供，其付费版本支持各种高级功能。</p>
<h3 id="特征-6"><a href="#特征-6" class="headerlink" title="特征"></a>特征</h3><ul>
<li>支持的操作系统：Windows 7&#x2F;8&#x2F;8.1&#x2F;10&#x2F;11 (32bit&#x2F;64bit&#x2F;arm64 )</li>
<li>包罗万象的压缩&#x2F;解压&#x2F;浏览&#x2F;编辑Archiver</li>
<li>提取 30 多种格式，包括 RAR&#x2F;RAR5&#x2F;7Z&#x2F;ZIP</li>
<li>使用密码和多卷压缩档案</li>
<li>多核快速压缩</li>
<li>Windows 11 上下文菜单支持</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718379.png" alt="image-20230519163134462"></p>
<h2 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="https://www.google.cn/intl/zh-CN/chrome/?brand=ZBQF&gclid=CjwKCAjwvJyjBhApEiwAWz2nLTyoIByulQn5W14r4U2sRna4Cg2GaP8icaVSvzJJ2038CMNkePvKVRoCX4AQAvD_BwE&gclsrc=aw.ds">Google Chrome下载地址</a></p>
<h3 id="介绍-7"><a href="#介绍-7" class="headerlink" title="介绍"></a>介绍</h3><p>Google Chrome是一款由Google公司开发的网页浏览器。 该浏览器基于其他开源软件（如WebKit）撰写，目标是提升稳定性、速度和安全性，并创造出简单且有效率的使用者界面。</p>
<h3 id="特征-7"><a href="#特征-7" class="headerlink" title="特征"></a>特征</h3><ul>
<li>速度快</li>
<li>搜索简单</li>
<li>密码检查</li>
<li>同步功能</li>
<li>标签页</li>
<li>拓展程序</li>
</ul>
<h2 id="OBS-Studio"><a href="#OBS-Studio" class="headerlink" title="OBS Studio"></a>OBS Studio</h2><h3 id="官网地址-8"><a href="#官网地址-8" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://obsproject.com/">OBS Studio官网地址</a></p>
<h3 id="介绍-8"><a href="#介绍-8" class="headerlink" title="介绍"></a>介绍</h3><p>用于视频录制和直播的免费开源软件。在 Windows、Mac 或 Linux 上快速轻松地下载并开始流式传输。</p>
<h3 id="特征-8"><a href="#特征-8" class="headerlink" title="特征"></a>特征</h3><ul>
<li>高性能实时视频&#x2F;音频捕获和混合。创建由多个来源组成的场景，包括窗口捕获、图像、文本、浏览器窗口、网络摄像头、捕获卡等。</li>
<li>设置无限数量的场景，您可以通过自定义转场在这些场景之间无缝切换。</li>
<li>直观的混音器，带有噪声门、噪声抑制和增益等按源滤波器。使用 VST 插件支持完全控制。</li>
<li>强大且易于使用的配置选项。添加新源、复制现有源并毫不费力地调整它们的属性。</li>
<li>简化的设置面板使您可以访问各种配置选项，以调整广播或录制的各个方面。</li>
<li>模块化的“Dock”UI 允许您完全按照自己的喜好重新排列布局。您甚至可以将每个单独的 Dock 弹出到它自己的窗口。</li>
</ul>
<h2 id="Bitwarden"><a href="#Bitwarden" class="headerlink" title="Bitwarden"></a>Bitwarden</h2><h3 id="官网地址-9"><a href="#官网地址-9" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://go.bitwarden.com/password-management-for-business-teams-organizations/?utm_source=google&utm_medium=cpc&utm_campaign=AW_APAC_NU_CL_Bitwarden_en_GSN_DTMB_Brand_KW:Brand_Exact&utm_content=646898599878&utm_term=bitwarden&hsa_acc=2567950947&hsa_cam=11319090405&hsa_grp=114652450007&hsa_ad=646898599878&hsa_src=g&hsa_tgt=kwd-442029814536&hsa_kw=bitwarden&hsa_mt=b&hsa_net=adwords&hsa_ver=3&gad=1&gclid=Cj0KCQjwmZejBhC_ARIsAGhCqnd6wyaGYoFsaCZfUj51mbAxur-1Y7LdNFFVq4Dat1H81qy4vhekpsoaAj1HEALw_wcB">Bitwarden官网地址</a></p>
<h3 id="介绍-9"><a href="#介绍-9" class="headerlink" title="介绍"></a>介绍</h3><p><strong>实施安全密码存储和共享</strong></p>
<p>随时随地 在任何设备上访问</p>
<p>我们安全的云同步功能使您和您的团队可以从任何地方、使用任何设备访问保险库数据。</p>
<p>通过端到端加密，所有敏感数据在离开您的设备之前都已加密，从而在管理和共享密码时确保您的数据安全。</p>
<h3 id="特征-9"><a href="#特征-9" class="headerlink" title="特征"></a>特征</h3><ul>
<li>零知识加密<ul>
<li>一种散列方法可以确保您的数据安全无虞。数据永远不会存储或发送解密。</li>
</ul>
</li>
<li>简易目录同步<ul>
<li>通过 SCIM 支持或目录连接器简化用户入职流程，以与您现有的目录服务同步。</li>
</ul>
</li>
<li>跨平台可访问性<ul>
<li>从任何位置、浏览器和设备访问 Bitwarden 保险库中的关键数据。</li>
</ul>
</li>
<li>源代码透明<ul>
<li>凭借开源基础，Bitwarden 会定期接受审计和改进以增强安全性。</li>
</ul>
</li>
<li>云同步或自托管<ul>
<li>使用 Bitwarden Cloud 快速启动和运行，或通过自托管选项获得完全控制。</li>
</ul>
</li>
<li>企业政策<ul>
<li>通过为所有用户设置策略和简化密码要求来引导用户体验。</li>
</ul>
</li>
<li>安全合规<ul>
<li>Bitwarden 符合<strong>Privacy Shield、HIPAA、GDPR、CCPA、SOC2</strong>和<strong>SOC3</strong>安全标准。</li>
</ul>
</li>
<li>专业的服务<ul>
<li>通过添加 Bitwarden 培训确保成功并创建顺利的入职流程。</li>
</ul>
</li>
<li>命令行能力<ul>
<li>使用我们强大的 CLI 实用程序进行最关键的集成。</li>
</ul>
</li>
</ul>
<p><img src="https://d9hhrg4mnvzow.cloudfront.net/go.bitwarden.com/password-management-for-business-teams-organizations/c0c10615-real-silver_10gr0dt000000000000028.png" alt="img"></p>
<h2 id="Rufus"><a href="#Rufus" class="headerlink" title="Rufus"></a>Rufus</h2><h3 id="官网地址-10"><a href="#官网地址-10" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://rufus.ie/zh/">Rufus官网地址</a></p>
<h3 id="介绍-10"><a href="#介绍-10" class="headerlink" title="介绍"></a>介绍</h3><p>Rufus 是一款格式化和创建 USB 启动盘的辅助工具。</p>
<h3 id="特征-10"><a href="#特征-10" class="headerlink" title="特征"></a>特征</h3><p>本软件适用于以下场景：</p>
<ul>
<li>需要将可引导 ISO (Windows、Linux、UEFI 等) 刻录到 USB 安装媒介的情况</li>
<li>需要处理未安装操作系统的设备的情况</li>
<li>需要在 DOS 环境下刷写 BIOS 或其他固件的情况</li>
<li>需要运行低级工具的情况</li>
</ul>
<p>Rufus 麻雀虽小，但五脏俱全！</p>
<h2 id="Clover"><a href="#Clover" class="headerlink" title="Clover"></a>Clover</h2><h3 id="官网地址-11"><a href="#官网地址-11" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="http://cn.ejie.me/">Clover官网地址</a></p>
<h3 id="介绍-11"><a href="#介绍-11" class="headerlink" title="介绍"></a>介绍</h3><p>Clover是一款免费实用的增强小软件，它能为你的Windows Explorer资源管理器增加多标签页的功能，就像谷歌浏览器那样方便好用。</p>
<h3 id="特征-11"><a href="#特征-11" class="headerlink" title="特征"></a>特征</h3><ul>
<li><p>方便的 Tab 页功能</p>
<ul>
<li>要掌握功能强大，操作简单的标签页，只需记住Ctrl+T新开页面，Ctrl+W关闭页面，Ctrl+Tab切换页面。</li>
</ul>
</li>
<li><p>操作系统无缝集成</p>
<ul>
<li>Clover 通过插件的形式集成到 Windows Explorer，保留您通常的使用习惯，无需学习新的文件管理操作。</li>
</ul>
</li>
<li><p>快如闪电的书签栏</p>
<ul>
<li>按Ctrl+D添加当前路径，或者直接将文件夹拖入书签栏。再也不用到处寻找要访问的文件夹了，瞬间到达。</li>
</ul>
</li>
</ul>
<h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><h3 id="官网地址-12"><a href="#官网地址-12" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://potplayer.daum.net/">PotPlayer官网地址</a></p>
<h3 id="介绍-12"><a href="#介绍-12" class="headerlink" title="介绍"></a>介绍</h3><p>PotPlayer是Daum公司的一款网络播放器。该播放器最大的特点就是内置强大的解码器，几乎支持播放所有格式的视频。软件界面非常清爽，软件不会残留多余后台进程，所以广受用户好评。大部分人都是把PotPlayer，当作本地播放器来使用。但其实它还可以播放网络视频。只要给PotPlayer添加一些直播源地址，它就可以播放电视直播频道。另外PotPlayer的外挂字幕、滤镜管理、自定义皮肤等功能，也非常好用。</p>
<h3 id="特征-12"><a href="#特征-12" class="headerlink" title="特征"></a>特征</h3><ul>
<li>支持强劲引擎加速<ul>
<li>支持 DXVA, CUDA, QuickSync 等等，以最少的资源制造最华丽的表现。在原有配置下体验最优表现。</li>
</ul>
</li>
<li>支持3D影像<ul>
<li>支持大量不同型号的3D眼镜连接电视或电脑立即享受3D视觉盛宴。支持Side by Side, Top and Bottom,Page Flipping等输出。</li>
</ul>
</li>
<li>支持多种字幕文件<ul>
<li>支持文字字幕SMI，SRTVobsub(DVD)，蓝光SUP字幕等多种字幕资源。支持 ASS&#x2F;SSA 动画以及SMI ruby tag。</li>
</ul>
</li>
<li>支持多种编译码器，便于管理<ul>
<li>使用时，无需再麻烦地安装各种全能编解码器，支持OpenCodec，用户自定义添加需要的编解码器。</li>
</ul>
</li>
<li>与众不同的高级功能<ul>
<li>多个文件一次性读取，流畅播放。</li>
<li>双声卡时，可自定义输出。</li>
<li>各时间段截图方便快速切换到不同场景。</li>
<li>提供特定场景添加并管理书签、章节功能。</li>
<li>支持Direct3D9 Ex Flip Mode, Overlay 功能。</li>
<li>支持其它硬件设备播放（DVD、 TV、 HDTV）。</li>
</ul>
</li>
</ul>
<h2 id="Wox"><a href="#Wox" class="headerlink" title="Wox"></a>Wox</h2><h3 id="官网地址-13"><a href="#官网地址-13" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="http://www.wox.one/">Wox官网地址</a></p>
<h3 id="介绍-13"><a href="#介绍-13" class="headerlink" title="介绍"></a>介绍</h3><p>一个有效的 Windows 启动器</p>
<p>一个功能齐全的启动器，在您键入时访问程序和 Web 内容。从此提高工作效率。</p>
<h3 id="特征-13"><a href="#特征-13" class="headerlink" title="特征"></a>特征</h3><p><strong>查找应用程序和文件</strong></p>
<p>无需离开键盘即可快速启动程序和本地文件，根据使用情况自动排序。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305221524248.jpeg" alt="img"></p>
<p><strong>快速搜索网络</strong></p>
<p><em>通过使用wiki</em>、<em>g</em>等关键字作为搜索前缀来搜索网络。</p>
<p>在 Wox 的设置窗口中添加您自己的网络搜索，以满足您的日常需求。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305221524194.jpeg" alt="img"></p>
<p><strong>插件</strong></p>
<p>为 Wox 制作插件很容易，Wox 支持由 CSharp、Python、NodeJS、Golang 等编写的插件。现在创建您自己的插件并与他人分享。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305221524925.jpeg" alt="img"></p>
<p><strong>主题</strong></p>
<p>将 Wox 与您的桌面相匹配。通过选择颜色、字体、大小等来创建您自己的主题。</p>
<p>立即使用<a href="http://www.wox.one/#theme/builder">主题生成器</a>创建您自己的主题。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305221525702.jpeg" alt="img"></p>
<h2 id="Clash"><a href="#Clash" class="headerlink" title="Clash"></a>Clash</h2><h3 id="官网地址-14"><a href="#官网地址-14" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://github.com/Dreamacro/clash">Clash GitHub地址</a></p>
<h3 id="介绍-14"><a href="#介绍-14" class="headerlink" title="介绍"></a>介绍</h3><p>Clash 是一个跨平台的基于规则的代理实用程序，运行在网络和应用层，支持开箱即用的各种代理和反审查协议。</p>
<p>在一些互联网受到严格审查或封锁的国家和地区，它已被互联网用户广泛采用。无论哪种方式，任何想要改善其 Internet 体验的人都可以使用 Clash。</p>
<h3 id="特征-14"><a href="#特征-14" class="headerlink" title="特征"></a>特征</h3><ul>
<li>入站：HTTP、HTTPS、SOCKS5 服务器、TUN 设备*</li>
<li>出站：Shadowsocks(R)、VMess、Trojan、Snell、SOCKS5、HTTP(S)、Wireguard*</li>
<li>基于规则的路由：动态脚本、域、IP 地址、进程名称等*</li>
<li>假 IP DNS：最大限度地减少对 DNS 污染的影响并提高网络性能</li>
<li>透明代理：使用自动路由表&#x2F;规则管理重定向 TCP 和 TProxy TCP&#x2F;UDP*</li>
<li>代理组：自动回退、负载平衡或延迟测试</li>
<li>Remote Providers：动态加载远程代理列表</li>
<li>RESTful API：通过综合 API 就地更新配置</li>
</ul>
<p>*：仅在免费高级版中可用。</p>
<h2 id="Geek-Uninstaller"><a href="#Geek-Uninstaller" class="headerlink" title="Geek Uninstaller"></a>Geek Uninstaller</h2><h3 id="官网地址-15"><a href="#官网地址-15" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://geekuninstaller.com/">Geek Uninstaller官网地址</a></p>
<h3 id="介绍-15"><a href="#介绍-15" class="headerlink" title="介绍"></a>介绍</h3><p>Geek是一款免安装的，大小不到10MB的Windows软件卸载工具，相比较于Windows自带的软件卸载程序，界面简洁易懂、操作简单，最为重要的一点是它会帮忙清理注册表及残留的文件和文件夹 。</p>
<h3 id="特征-15"><a href="#特征-15" class="headerlink" title="特征"></a>特征</h3><ul>
<li>清洁去除<ul>
<li>执行深度和快速扫描并删除所有残留物。保持电脑清洁！</li>
</ul>
</li>
<li>简单的用户界面<ul>
<li>外观精美，功能出奇。船上有 40 多种语言！</li>
</ul>
</li>
<li>快速和智能<ul>
<li>即时启动。键入搜索以立即找到应用程序。快速剩菜扫描。</li>
</ul>
</li>
<li>强制移除<ul>
<li>对顽固和损坏的程序使用强制删除。</li>
</ul>
</li>
<li>卸载 Microsoft Store 应用<ul>
<li>在 Windows 8&#x2F;8.1&#x2F;10 上卸载 Microsoft Store 应用程序。</li>
</ul>
</li>
<li>便携的<ul>
<li>单个和小型 EXE 可在任何 32 位和 64 位 Windows 上运行。</li>
</ul>
</li>
</ul>
<p><img src="https://geekuninstaller.com/assets/images/screen_1.png" alt="极客卸载程序"></p>
<h2 id="ToDesk"><a href="#ToDesk" class="headerlink" title="ToDesk"></a>ToDesk</h2><h3 id="官网地址-16"><a href="#官网地址-16" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.todesk.com/">ToDesk官网地址</a></p>
<h3 id="介绍-16"><a href="#介绍-16" class="headerlink" title="介绍"></a>介绍</h3><p>ToDesk 是一款多平台远程控制软件，支持主流操作系统Windows、Linux、Mac、Android、iOS跨平台协同操作。</p>
<h3 id="特征-16"><a href="#特征-16" class="headerlink" title="特征"></a>特征</h3><ul>
<li>安全,通讯数据 使用 SSL + ChaCha20 and Poly1305 端到端加密。</li>
<li>跨平台,支持：Windows, macOS , iOS , Android , Linux (x86_x64、Arm_v7l、Arm64)。</li>
<li>能在各种复杂结构网络,弱联网下运作良好.(TCP 直连,TCP 中转,P2P(KCP),UPNP)。</li>
<li>适配各种分辨率屏幕,多屏幕设备。</li>
<li>能轻松穿透内网,在复杂 NAT 网络下使用。</li>
<li>流畅的屏幕传输算法以及遍布全国的加速节点。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305191718380.png" alt="image-20230519171257551"></p>
<h2 id="阿里云盘"><a href="#阿里云盘" class="headerlink" title="阿里云盘"></a>阿里云盘</h2><h3 id="官网地址-17"><a href="#官网地址-17" class="headerlink" title="官网地址"></a>官网地址</h3><p><a href="https://www.aliyundrive.com/">阿里云盘官网地址</a></p>
<h3 id="介绍-17"><a href="#介绍-17" class="headerlink" title="介绍"></a>介绍</h3><p>阿里云盘是一款速度快、不打扰、够安全、易于分享的网盘，你可以在这里存储、管理和探索内容，尽情打造丰富的数字世界。</p>
<h3 id="特征-17"><a href="#特征-17" class="headerlink" title="特征"></a>特征</h3><ul>
<li><p>多设备备份</p>
</li>
<li><p>资料智能整理</p>
</li>
<li><p>极速下载</p>
</li>
<li><p>极速上传</p>
</li>
<li><p>超大文件快传</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Windows</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA常用插件</title>
    <url>/posts/22706/</url>
    <content><![CDATA[<blockquote>
<p>这些插件主要是自己在平时的开发过程中用着感觉还不错的插件，IntelliJ IDEA2023版本之前没有同步功能，换了电脑或者重装电脑系统后需要重复配置，特此记录以便后续需要。IntelliJ IDEA2023版本有了同步功能，只要你在使用过程中登录了账号，同步了你的IntelliJ IDEA编辑器的相关设置，下次安装IntelliJ IDEA之后登录账号就无需重复配置了。</p>
</blockquote>
<span id="more"></span>

<h2 id="CamelCase"><a href="#CamelCase" class="headerlink" title="CamelCase"></a>CamelCase</h2><p>在 kebab-case、SNAKE_CASE、PascalCase、camelCase、snake_case 或 space case 之间轻松切换。请参阅编辑菜单或使用 ⇧ + ⌥ + U &#x2F; Shift + Alt + U。<br>请查看此插件的首选项：您可以禁用某些转换或更改它们的顺序。</p>
<h2 id="CodeGlance-Pro"><a href="#CodeGlance-Pro" class="headerlink" title="CodeGlance Pro"></a>CodeGlance Pro</h2><p>可在编辑器窗格中显示类似于 Sublime 中的缩小概览或迷你地图。迷你地图允许快速滚动，让您直接跳转到代码部分。重做 CodeGlance，支持更多功能</p>
<ul>
<li>隐藏原始滚动条。</li>
<li>右键单击快速配置。</li>
<li>支持标记高亮。</li>
<li>支持错误条纹高亮显示。</li>
<li>支持Vcs行高亮。</li>
<li>支持插入符行高亮。</li>
<li>支持语言 ColorScheme。</li>
<li>在 Glance 上快速查看代码。</li>
<li>在拆分器模式下自动计算宽度。</li>
<li>Ctrl-Shift-G 切换 Glance。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182301726.png" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182302880.png" alt="截图2"></p>
<h2 id="Gitee"><a href="#Gitee" class="headerlink" title="Gitee"></a>Gitee</h2><p>允许使用<a href="https://gitee.com/">码云 - Gitee</a> 有一些功能就像<a href="https://github.com/">GitHub</a>插件一样。</p>
<h2 id="GoogleTranslation"><a href="#GoogleTranslation" class="headerlink" title="GoogleTranslation"></a>GoogleTranslation</h2><p>该插件基于以下项目[py-googletrans]| [翻译集]|[EC翻译]|TranslationPlugin用于将英语翻译成中文的插件。 一般使用说明：</p>
<ul>
<li>选择您要翻译的单词。</li>
<li>按 CTRL + Alt + 1。</li>
</ul>
<h2 id="Grep-Console"><a href="#Grep-Console" class="headerlink" title="Grep Console"></a>Grep Console</h2><p>Grep、tail、filter、highlight…控制台所需的一切（<a href="https://github.com/krasa/GrepConsole/issues/267">New Logcat</a>和<a href="https://youtrack.jetbrains.com/issue/IDEA-216442">JS&#x2F;NPM&#x2F;GoLand&#x2F;… 不支持终端</a>). 也可以突出显示编辑…</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182300818.png" alt="image-20230518223837415"></p>
<p>个人背景颜色配置：</p>
<table>
<thead>
<tr>
<th>日志级别</th>
<th>颜色</th>
<th>十六进制</th>
<th>RGB</th>
</tr>
</thead>
<tbody><tr>
<td>FATAL</td>
<td>纯红</td>
<td>FF0000</td>
<td>255,0,0</td>
</tr>
<tr>
<td>ERROR</td>
<td>橙红色</td>
<td>FF4500</td>
<td>255,69,0</td>
</tr>
<tr>
<td>WARN</td>
<td>深橙色</td>
<td>FF8C00</td>
<td>255,140,0</td>
</tr>
<tr>
<td>INFO</td>
<td>海洋绿</td>
<td>2E8B57</td>
<td>46,139,87</td>
</tr>
<tr>
<td>DEBUG</td>
<td>春天的绿色</td>
<td>3CB371</td>
<td>60,179,113</td>
</tr>
<tr>
<td>TRACE</td>
<td>浅海洋绿</td>
<td>20B2AA</td>
<td>32,178,170</td>
</tr>
</tbody></table>
<h2 id="GsonFormatPlus"><a href="#GsonFormatPlus" class="headerlink" title="GsonFormatPlus"></a>GsonFormatPlus</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182302940.gif" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303337.png" alt="截图2"></p>
<p>GsonFormatPlus 这是一个可以从 Json String 生成 Json 模型的插件。 <strong>此插件仅适用于 IntelliJ IDEA 和 Android Studio</strong>。它基于GsonFormat，更加灵活方便。</p>
<h2 id="Maven-Helper"><a href="#Maven-Helper" class="headerlink" title="Maven Helper"></a>Maven Helper</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303666.png" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303192.png" alt="截图2"></p>
<p>一个必须与 Maven 一起工作的插件。</p>
<ul>
<li>分析和排除冲突依赖关系的简便方法</li>
<li>为包含当前文件或根模块的模块运行&#x2F;调试 maven 目标的操作</li>
<li>在当前 Maven 模块路径打开终端的操作</li>
<li>运行&#x2F;调试当前测试文件的操作。</li>
</ul>
<h2 id="MyBatisX"><a href="#MyBatisX" class="headerlink" title="MyBatisX"></a>MyBatisX</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303139.gif" alt="Screenshot 1"></p>
<p>MybatisX 插件特点：</p>
<ul>
<li>mapper和xml可以来回跳转</li>
<li>mybatis.xml,mapper.xml提示</li>
<li>mapper和xml支持像jpa一样的自动提示（参考MybatisCodeHelperPro）</li>
</ul>
<h2 id="RestfulTool"><a href="#RestfulTool" class="headerlink" title="RestfulTool"></a>RestfulTool</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303314.gif" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303461.jpeg" alt="截图2"></p>
<ul>
<li>一套Restful服务开发的辅助工具<ol>
<li>提供服务树的显示窗口</li>
<li>双击网址直接跳转到对应的方法定义</li>
<li>一个简单的http apiService工具</li>
<li>支持Spring系统（Spring MVC &#x2F; Spring Boot）</li>
<li>支持 JAX-RS</li>
<li>支持<code>Navigate-&gt;Request Service</code>搜索映射(Ctrl + Alt + &#x2F;)</li>
</ol>
</li>
<li>一套Restful服务开发辅助工具集<ol>
<li>提供一个服务树的显示窗</li>
<li>双点击 URL 直接跳转到对应的方法设定义</li>
<li>一个简单的http请求工具</li>
<li>支持 Spring 体系 (Spring MVC &#x2F; Spring Boot)</li>
<li>支持 JAX-RS</li>
<li>支持 <code>Navigate -&gt; Request Service</code> 搜索映射 (Ctrl + Alt + &#x2F;)</li>
</ol>
</li>
</ul>
<h2 id="Save-Actions-Tool"><a href="#Save-Actions-Tool" class="headerlink" title="Save Actions Tool"></a>Save Actions Tool</h2><p>支持可配置的、类似 Eclipse 的保存操作，包括“优化导入”、“重新格式化代码”、“重新排列代码”、“编译文件”和一些针对 Java 的快速修复，如“添加&#x2F;删除‘this’限定符”等。当文件在磁盘上同步（或保存）时执行配置的操作。</p>
<p><strong>特征</strong></p>
<ul>
<li>优化导入</li>
<li>在文件保存、快捷方式、批处理（或组合）上运行</li>
<li>通过选择范围在多个文件上运行</li>
<li>重新格式化代码（整个文件或仅更改的文本）</li>
<li>重新排列代码（重新排序方法、字段等）</li>
<li>包含&#x2F;排除具有正则表达式支持的文件</li>
<li>适用于任何文件类型（Java、Python、XML 等）</li>
<li>为您可以提交的每个项目使用一个设置文件</li>
<li>可用的键盘映射和激活操作</li>
<li>使用“快速列表”启动任何编辑器操作</li>
<li>[Java IDE] Eclipse 配置文件<code>.epf</code> 支持</li>
<li>[Java IDE] 自动修复 Java 检查</li>
<li>[Java IDE] 保存后编译工程</li>
<li>[Java IDE] 保存后重新加载调试器</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182300819.png" alt="image-20230518222802130"></p>
<h2 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a>Translation</h2><p><strong>特征</strong></p>
<ul>
<li>多个翻译引擎。<ul>
<li>微软翻译。</li>
<li>谷歌翻译。</li>
<li>DeepL 翻译器。</li>
<li>有道翻译。</li>
<li>阿里巴巴翻译。</li>
<li>百度翻译。</li>
</ul>
</li>
<li>多种语言互译。</li>
<li>文件翻译。</li>
<li>文字转语音。</li>
<li>自动选词。</li>
<li>自动分词。</li>
<li>字书。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303722.png" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182303504.png" alt="截图2"></p>
<h2 id="Rainbow-Brackets"><a href="#Rainbow-Brackets" class="headerlink" title="Rainbow Brackets"></a>Rainbow Brackets</h2><p><strong>🌈基于 IntelliJ 的 IDE&#x2F;Android Studio&#x2F;HUAWEI DevEco Studio 的 Rainbow Brackets</strong></p>
<p>免费功能由<strong>CodeStream赞助</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182304554.jpeg" alt="截图一"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305182304755.png" alt="Screenshot 2"></p>
]]></content>
      <categories>
        <category>IntelliJ IDEA</category>
      </categories>
      <tags>
        <tag>IntelliJ IDEA</tag>
        <tag>插件</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>As I Began to Love Myself</title>
    <url>/posts/60922/</url>
    <content><![CDATA[<p>As I began to love myself I found that anguish and emotional suffering are only warning signs that I was living against my own truth. Today, I know, this is <strong>AUTHENTICITY</strong>.</p>
<span id="more"></span>
<p>当我真正开始爱自己，我才意识到，所有的痛苦和情感的折磨，仅仅是在提醒，我的生活背离了真实的自己。今日，我明白，这叫做「真实」。</p>
<p>As I began to love myself I understood how much it can offend somebody if I try to force my desires on this person, even though I knew the time was not right and the person was not ready for it, and even though this person was me. Today I call it <strong>RESPECT</strong>.</p>
<p>当我真正开始爱自己，我才懂得，当我将自己的意愿强加于人时，是多么的冒犯无礼，即使那时我知晓时机尚未成熟，那个人也并未做好准备，即便那个人就是我自己。今日我明白这叫做「尊重」。</p>
<p>As I began to love myself I stopped craving for a different life, and I could see that everything that surrounded me was inviting me to grow. Today I call it <strong>MATURITY.</strong></p>
<p>当我开始真正爱自己，我不再苛求不一样的人生，我明白任何发生在我身边的事，都是对我成长的邀约。而今，我称之为「成熟」。</p>
<p>As I began to love myself I understood that at any circumstance, I am in the right place at the right time, and everything happens at the exactly right moment. So I could be calm. Today I call it <strong>SELF-CONFIDENCE</strong>.</p>
<p>当我开始真正爱自己，我才明白在任何情况下，我其实一直处于恰好的时机、恰好的地方，而每件事的发生也都恰如其分。由此，我得以平静。今日，我称其为「自信」。</p>
<p>As I began to love myself I quit stealing my own time, and I stopped designing huge projects for the future. Today, I only do what brings me joy and happiness, things I love to do and that make my heart cheer, and I do them in my own way and in my own rhythm. Today I call it <strong>SIMPLICITY.</strong></p>
<p>当我开始真正爱自己，我不再挥霍自己生命和时间，不再去擘画波澜壮阔的未来。今天的我，只做能为我带来喜悦和幸福的事，做那些我所热爱，且能鼓舞我心的事情，用我特有的方式，按照我自己的节奏。今日我知晓这叫做「简单」。</p>
<p>As I began to love myself I freed myself of anything that is no good for my health – food, people, things, situations, and everything that drew me down and away from myself. At first, I called this attitude a healthy egoism. Today I know it is <strong>LOVE OF ONESELF</strong>.</p>
<p>当我开始真正爱自己，我开始远离所有不健康的东西，不论是饮食、人物、事情亦或环境，远离拖累我、让我背离了真实自我的一切。从前的我称呼这为“有益健康的利己主义”。今天我知道，这其实是「自爱」。</p>
<p>As I began to love myself I quit trying to always be right, and ever since I was wrong less of the time. Today I discovered that is <strong>MODESTY</strong>.</p>
<p>当我开始真正爱自己，我不再总想做到永远正确，从那时起，我犯错的时候反而更少了。现在我发现那就是「谦逊」。</p>
<p>As I began to love myself I refused to go on living in the past and worrying about the future. Now, I only live for the moment, where everything is happening. Today I live each day, day by day, and I call it <strong>FULFILLMENT</strong>.</p>
<p>当我开始真正爱自己，我不再继续沉溺于过去，也不再为明天而忧虑。如今，我只活在这一切正在发生的当下。今天，我活在此时此地，如此日复一日，而我称这为「圆满」。</p>
<p>As I began to love myself I recognized that my mind can disturb me and it can make me sick. But as I connected it to my heart, my mind became a valuable ally. Today I call this connection <strong>WISDOM OF THE HEART</strong>.</p>
<p>当我真正开始爱自己，我明白，我的思虑扰乱了自我，使我变得了无生趣。但当我与本心相连，心灵的力量就成为了我坚实的后盾。今日我称这种连结为「心灵的智慧」。</p>
<p>We no longer need to fear arguments, confrontations or any kind of problems with ourselves or others. Even stars collide, and out of their crashing new worlds are born. Today I know <strong>THAT IS LIFE.</strong></p>
<p>我们无需再害怕生命中的争论、冲突，或是任何出现在与我们自己或与其他人之间的问题。因为即使是星星也会有碰撞在一起的时候，而从它们的撞击中，新的世界将会诞生。今天我知道，这便是人生。</p>
]]></content>
      <categories>
        <category>English Poetry</category>
      </categories>
      <tags>
        <tag>英语学习</tag>
        <tag>励志</tag>
        <tag>诗</tag>
        <tag>卓别林</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装Office教程</title>
    <url>/posts/46262/</url>
    <content><![CDATA[<h2 id="Office-Tool-Plus工具下载"><a href="#Office-Tool-Plus工具下载" class="headerlink" title="Office Tool Plus工具下载"></a>Office Tool Plus工具下载</h2><p><a href="https://otp.landian.vip/zh-cn/download.html">Office Tool Plus下载地址</a></p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725026.jpeg" alt="image.png"></p>
<p>使用推荐下载</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725009.jpeg" alt="image.png"></p>
<p>下载完成后，选择一个文件夹解压</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725050.jpeg" alt="image.png"></p>
<h2 id="部署Office"><a href="#部署Office" class="headerlink" title="部署Office"></a>部署Office</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725033.jpeg" alt="image.png"></p>
<p>选择Office Tool Plus.exe右键以管理员方式运行</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725019.jpeg" alt="image.png"></p>
<p>选择仍要运行</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725044.jpeg" alt="image.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725169.jpeg" alt="image.png"></p>
<p>点击部署按钮，进入到如下界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725612.jpeg" alt="image.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725272.jpeg" alt="image.png"></p>
<p>根据如图所示进行选择，选择完成后，开始部署，下载时间大概五分钟左右。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725639.jpeg" alt="image.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725021.jpeg" alt="image.png"></p>
<p>安装完成后，点击关闭。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725308.jpeg" alt="image.png"></p>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><p>回到这个界面，点击激活按钮。</p>
<p><img src="https://b3logfile.com/file/2022/06/image-6bdc3964.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100" alt="image.png"></p>
<p>1、安装许可证</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725713.jpeg" alt="image.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725262.jpeg" alt="image.png"></p>
<p>2、填写kms地址并保存（填写了kms地址之后一定要点击保存设置，不然激活的时候会不成功）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kms.cangshui.net</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725428.jpeg" alt="image.png"></p>
<p>3、激活</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725699.jpeg" alt="image.png"></p>
<p>如图所示激活成功，这时可以关闭该软件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725808.jpeg" alt="image.png"></p>
<h2 id="校验是否激活成功"><a href="#校验是否激活成功" class="headerlink" title="校验是否激活成功"></a>校验是否激活成功</h2><p>新建一个文件测试是否激活成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305121725060.jpeg" alt="image.png"></p>
<blockquote>
<p>注意：在第二步部署的时候有可能会出现object reference not set to an instance of an object的错误，出现该提示的时候，直接将软件关闭，删除解压文件。再将之前下载的压缩文件解压重新操作即可，如果还是报错将语言下面的校对工具选择勾去掉（本人的系统是Windows11，安装的时候出现了该错误，之前的Windows10安装的时候没问题）</p>
</blockquote>
]]></content>
      <categories>
        <category>Office</category>
      </categories>
      <tags>
        <tag>安装教程</tag>
        <tag>Windows</tag>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo集成FancyBox实现图片点击放大效果</title>
    <url>/posts/57073/</url>
    <content><![CDATA[<blockquote>
<p>Hexo的Next主题本身查看图片时不能点击放大查看不是很方便，于是开始找相关的教程，发现FancyBox可以完美实现。</p>
<p>本次使用的Hexo和Next的版本分别是</p>
<p>Hexo：6.3.0</p>
<p>Next：8.16.0</p>
</blockquote>
<span id="more"></span>

<h2 id="新建文件夹"><a href="#新建文件夹" class="headerlink" title="新建文件夹"></a>新建文件夹</h2><p>在博客根目录source文件夹下新建一个plugin文件夹用来存放即将要下载的插件，这样做的好处是后面你即使升级了主题版本也无需重复下载安装插件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305111820889.png" alt="image-20230509175443454"></p>
<h2 id="切换文件夹位置"><a href="#切换文件夹位置" class="headerlink" title="切换文件夹位置"></a>切换文件夹位置</h2><p>将位置切换到plugin文件夹所在位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd G:\Code\ifreesync\source\plugin</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305091758761.png" alt="image-20230509175804626"></p>
<h2 id="安装FancyBox插件"><a href="#安装FancyBox插件" class="headerlink" title="安装FancyBox插件"></a>安装FancyBox插件</h2><p>安装FancyBox插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-fancybox3 fancybox</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305111812923.png" alt="image-20230511181225808"></p>
<h2 id="修改主题文件配置"><a href="#修改主题文件配置" class="headerlink" title="修改主题文件配置"></a>修改主题文件配置</h2><p>设置主题配置文件，在主题配置文件内搜索fancybox，将fancybox: false修改为fancybox: true。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305111817651.png" alt="image-20230511181718605"></p>
<p>设置完成后，执行命令，查看效果。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305111818108.png" alt="image-20230511181858981"></p>
<p><strong>参考文章</strong></p>
<p><a href="https://wugenqiang.blog.csdn.net/article/details/89057323?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-5-89057323-blog-100066698.235%5Ev32%5Epc_relevant_increate_t0_download_v2_base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-5-89057323-blog-100066698.235%5Ev32%5Epc_relevant_increate_t0_download_v2_base&utm_relevant_index=9">Hexo文章中图片点击实现全屏查看</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>FancyBox</tag>
        <tag>Image</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo集成DaoVoice实现网页在线通讯功能</title>
    <url>/posts/26527/</url>
    <content><![CDATA[<h2 id="什么是DaoVoice"><a href="#什么是DaoVoice" class="headerlink" title="什么是DaoVoice"></a>什么是DaoVoice</h2><p>即时在线通讯的一个工具，在网页上咨询问题，可以第一时间得到反馈。并且DaoVoice可以绑定微信，这样在网页上发送的消息，会第一时间推送到作者的微信上，非常方便。</p>
<span id="more"></span>

<h2 id="注册DaoVoice"><a href="#注册DaoVoice" class="headerlink" title="注册DaoVoice"></a>注册DaoVoice</h2><p>首先在<a href="https://account.daocloud.io/">DaoVoice官网</a>注册一个账号</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305022346596.png" alt="image-20230502234633827"></p>
<h2 id="获取appid"><a href="#获取appid" class="headerlink" title="获取appid"></a>获取appid</h2><p>前往<a href="http://dashboard.daovoice.io/">DaoVoice控制台</a>，点击应用设置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305022348087.png" alt="image-20230502234857918"></p>
<p>选择安装到网站，获取appid</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305022351305.png" alt="image-20230502235108143"></p>
<h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><p>首先在themes&#x2F;next&#x2F;_config.yml文件末尾加上如下配置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 你的appid</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305030009008.png" alt="image-20230503000913834"></p>
<p>然后在themes&#x2F;next&#x2F;_config.yml文件内搜索motion，如果enable为true的话，将它设置为false，不然集成了DaoVoice页面上会是一片空白，看不了文章。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305030008984.png" alt="image-20230503000829800"></p>
<p>最后在themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;head&#x2F;head.swig文件末尾新增如下内容,<strong>注意：将appid替换成你自己的</strong>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i, s, o, g, r, a, m) &#123;</span><br><span class="line">  	i[&quot;DaoVoiceObject&quot;] = r;</span><br><span class="line">  	i[r] = i[r] || function() &#123;</span><br><span class="line">  		(i[r].q = i[r].q || [])</span><br><span class="line">  		.push(arguments)</span><br><span class="line">  	&#125;, i[r].l = 1 * new Date();</span><br><span class="line">  	a = s.createElement(o), m = s.getElementsByTagName(o)[0];</span><br><span class="line">  	a.async = 1;</span><br><span class="line">  	a.src = g;</span><br><span class="line">  	a.charset = &quot;utf-8&quot;;</span><br><span class="line">  	m.parentNode.insertBefore(a, m)</span><br><span class="line">  &#125;)(window, document, &quot;script&quot;, (&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/你的appid.js&quot;, &quot;daovoice&quot;)</span><br><span class="line">  daovoice(&#x27;init&#x27;, &#123;</span><br><span class="line">  	app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">  daovoice(&#x27;update&#x27;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305030004238.png" alt="image-20230503000433067"></p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>执行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305030014538.png" alt="image-20230503001401062"></p>
<h2 id="自定义效果"><a href="#自定义效果" class="headerlink" title="自定义效果"></a>自定义效果</h2><p>免费版可自定义的东西不是很多，可以修改定制欢迎辞，聊天图标的颜色及位置，其他功能自行探索。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202305030029579.png" alt="image-20230503002905412"></p>
<p>参考文章</p>
<p><a href="https://www.jianshu.com/p/f0a8f8dfbd22?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation">Hexo+DaoVoice实现网页在线通讯功能</a></p>
<p><a href="https://blog.csdn.net/qq_19706923/article/details/108203285">Hexo使用Next主题时，添加DaoVoice后看不见文章的解决办法</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>使用教程</tag>
        <tag>DaoVoice</tag>
        <tag>即时通讯</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo基础使用教程</title>
    <url>/posts/56507/</url>
    <content><![CDATA[<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<span id="more"></span>

<h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><ul>
<li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>
<li><a href="http://git-scm.com/">Git</a></li>
</ul>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li><p>安装Node.js</p>
<p>Node.js官网下载地址：<a href="https://nodejs.org/en/download">Node.js download</a></p>
<p>1.进入node.js官网下载最新版本的Node.js（推荐使用LTS，LTS：长期稳定版 Current：尝鲜版，操作系统根据自己的系统进行选择。）</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251001143.png" alt="image-20230425095436247"></p>
<p>2.下载完成后，双击node-v18.16.0-x64.msi文件进行安装。</p>
<p>3.安装完成后，检查node.js版本，打开cmd，输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">或者</span><br><span class="line">node --version</span><br></pre></td></tr></table></figure>

<p>如图所示表示成功（我这里是之前已经安装过，不是最新版本）</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251008283.png" alt="image-20230425100838204"></p>
<p>4.设置镜像加速，安装淘宝镜像。</p>
<p>   在cmd命令窗口输入以下命令并回车</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251013951.png" alt="image-20230425101316879"></p>
<p>​	检查是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cnpm -v</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251107407.png" alt="image-20230425110724351"></p>
</li>
<li><p>安装Git</p>
<p><a href="https://git-scm.com/downloads">Git官方下载地址</a></p>
<p>1.根据自己的操作系统下载最新版本Git，我这里是Windows x64</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251021970.png" alt="image-20230425102149826"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251023822.png"></p>
<p>2.下载完成后，双击Git-2.40.0-64-bit.exe进行安装（这里直接采用傻瓜式安装，直接全部默认选项下一步安装）</p>
<p>至此Hexo所需的环境已经安装完成。</p>
</li>
</ul>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">或者</span><br><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>我这里已经安装过，界面有可能不同</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251031129.png" alt="image-20230425103108031"></p>
<h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>选择一个你想存放初始化文件的位置，然后进入cmd命令面板</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251035607.png" alt="image-20230425103520522"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251035191.png" alt="image-20230425103550141"></p>
<p>输入初始化命令 （hexo-blog：指的是初始化文件的名称，这里自定义）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init hexo-blog</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271442462.png" alt="image-20230427144218345"></p>
<h3 id="进入初始化文件夹，安装npm"><a href="#进入初始化文件夹，安装npm" class="headerlink" title="进入初始化文件夹，安装npm"></a>进入初始化文件夹，安装npm</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd hexo-blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271443831.png" alt="image-20230427144300721"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251042897.png" alt="image-20230425104216821"></p>
<p>scaffolds：模板文件夹</p>
<p>source：资源文件夹</p>
<p>themes：主题文件夹</p>
<p>_config.yml：站点配置信息</p>
<p>package.json：应用程序信息</p>
<h3 id="启动Hexo"><a href="#启动Hexo" class="headerlink" title="启动Hexo"></a>启动Hexo</h3><p>hexo最常用的四个命令 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean：该命令可以简写为：hexo c</span><br><span class="line">作用：</span><br><span class="line">清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span><br><span class="line">在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</span><br><span class="line"></span><br><span class="line">hexo generate：该命令可以简写为：hexo g</span><br><span class="line">作用：部署之前预先生成静态文件。</span><br><span class="line"></span><br><span class="line">hexo deploy：该命令可以简写为：hexo d</span><br><span class="line">作用：部署网站。</span><br><span class="line"></span><br><span class="line">hexo server：该命令可以简写为：hexo s</span><br><span class="line">作用：启动服务器。默认情况下，访问网址为： http://localhost:4000/。</span><br><span class="line"></span><br><span class="line">本地启动服务：</span><br><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">部署到远程服务器</span><br><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251100736.png" alt="image-20230425110007609"></p>
<p>启动完成后直接访问：<a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>如图所示表示成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304251101306.png" alt="image-20230425110112099"></p>
<h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><p>我这里使用的是GitHub，你可以根据自己的情况选择其他的代码托管平台（Gitee、Coding······）</p>
<p>这里需要拥有一个github账户，如果没有的话请先注册一个。</p>
<p>首先将我们的源代码hexo-blog，提交到github仓库，这样每次打开不一样的电脑，只需要进行简单的配置和在github上把文件同步下来，就可以无缝操作了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271439932.png" alt="image-20230427143947795"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271447294.png" alt="image-20230427144718160"></p>
<p><strong>声明：我这里采用的是两个仓库的方式，一个仓库用于部署网站，一个用于存放网站源代码。如果你不想使用两个仓库的话，可以只新建一个仓库，采用多分支的方式实现也可以。</strong></p>
<p>由于我们之前已经将源代码仓库上传到了github，这里我们还需要新建一个仓库用于部署网站。</p>
<p>登录github，在右上角有一个“+”标志，点击加号，选择New repository新建一个仓库。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261054146.png" alt="image-20230426104429453"></p>
<p>创建一个和你用户名相同的仓库（xxxx：你的用户名）：xxxx.github.io，将仓库设置为公开，然后点击创建。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261124589.png" alt="image-20230426112450473"></p>
<h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><p>回到桌面，鼠标右键选择Git Bash Here，进入到Git Bash界面。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261726896.png" alt="image-20230426172646840"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261728681.png" alt="image-20230426172803619"></p>
<p>在Git Bash命令窗口依次输入下面两条命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p>yourname：github的用户名</p>
<p>youremail：github的邮箱</p>
<p>检查输入是否正确，如果输入下面两条命令显示用户名和邮箱表示正确。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>

<p>创建SSH，输入下面命令后一路回车即可，这里的youremail同上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p>创建完成后就可以在电脑上找到它，文件位置一般是在C盘→用户→你电脑用户名→.ssh文件夹下</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261738205.png" alt="image-20230426173854106"></p>
<p>id_rsa：公钥，可以给别人看。</p>
<p>id_rsa.pub：私钥，自己保管不要泄露给别人。</p>
<p><strong>公钥与私钥的作用：用公钥加密的内容只能用私钥解密，用私钥加密的内容只能用公钥解密。公钥与私钥是用来验证服务端与客户端之间发送的报文信息是否被篡改了。</strong></p>
<p>回到github，点击个人头像，选择setting，进入设置页面。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261745191.png" alt="image-20230426174550079"></p>
<p>点击SSH and GPG keys，选择SSH keys。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261747217.png" alt="image-20230426174756087"></p>
<p>点击 New SSH key</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261751640.png" alt="image-20230426175102449"></p>
<p>Title自己随便起一个名字，Key type使用默认选中的，Key里面的内使用我们刚刚电脑上生成的id_rsa.pub文件内的内容，直接复制id_rsa.pub文件的内容到输入框，然后点击Add SSH key就OK了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261752730.png" alt="image-20230426175215631"></p>
<p>验证是否成功，在Git bash命令窗口输入以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>如图所示表示成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304261800142.png" alt="image-20230426180020084"></p>
<h2 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h2><p>这一步主要是将hexo和github关联起来，打开站点配置文件_config.yml，找到deploy的位置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271522150.png" alt="image-20230427152241024"></p>
<p>修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271523335.png" alt="image-20230427152346217"></p>
<p>假如你想将项目部署到多个平台的话，修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - type: git</span><br><span class="line">    repo:</span><br><span class="line">      github: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">      gitee: https://gitee.com/YourgithubName/YourgithubName.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271526583.png" alt="image-20230427152642471"></p>
<p>然后安装部署插件deploy-git。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271528729.png" alt="image-20230427152828609"></p>
<p>然后执行命令，将本地代码部署到远程服务。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo c &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304271533829.png" alt="image-20230427153319767"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>使用教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下kill指定占用的端口号</title>
    <url>/posts/58869/</url>
    <content><![CDATA[<h2 id="使用命令查询占用的端口号"><a href="#使用命令查询占用的端口号" class="headerlink" title="使用命令查询占用的端口号"></a>使用命令查询占用的端口号</h2><p>以22100端口号为例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入以下命令并回车</span><br><span class="line">netstat -aon|findstr &quot;22100&quot;</span><br></pre></td></tr></table></figure>


<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304211436746.png" alt="image-20230421143616629"></p>
<p>可以看到，端口号22100被进程号为16896的进程占用。</p>
<h2 id="使用命令结束对应的进程号"><a href="#使用命令结束对应的进程号" class="headerlink" title="使用命令结束对应的进程号"></a>使用命令结束对应的进程号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入以下命令并回车</span><br><span class="line">taskkill /pid 16896 -t -f</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202304211440898.png" alt="image-20230421144017835"></p>
]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>进程</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux下使用crontab定时任务对MySQL数据库备份，并将备份文件发送至指定邮箱</title>
    <url>/posts/65022/</url>
    <content><![CDATA[<h2 id="安装crontab"><a href="#安装crontab" class="headerlink" title="安装crontab"></a>安装crontab</h2><p>依次执行以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install vixie-cron</span><br><span class="line">yum -y install crontabs</span><br></pre></td></tr></table></figure>

<p>crontab相关命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//启动服务</span><br><span class="line">service crond start   </span><br><span class="line">//关闭服务</span><br><span class="line">service crond stop  </span><br><span class="line">//重启服务</span><br><span class="line">service crond restart</span><br><span class="line">//重新载入配置   </span><br><span class="line">service crond reload</span><br><span class="line">//查看crontab服务状态  </span><br><span class="line">service crond status</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>设置开机自启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --level 345 crond on</span><br></pre></td></tr></table></figure>

<h2 id="安装mutt、msmtp"><a href="#安装mutt、msmtp" class="headerlink" title="安装mutt、msmtp"></a>安装mutt、msmtp</h2><p>CentOs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 更新所有的软件包</span><br><span class="line">yum update -y</span><br><span class="line"># 安装mutt、msmtp</span><br><span class="line">yum install mutt msmtp -y</span><br></pre></td></tr></table></figure>

<p>Debian</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install mutt msmtp -y</span><br></pre></td></tr></table></figure>

<h2 id="配置-muttrc、-msmtprc文件"><a href="#配置-muttrc、-msmtprc文件" class="headerlink" title="配置.muttrc、.msmtprc文件"></a>配置.muttrc、.msmtprc文件</h2><p>进入用户根目录</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd /root/</span><br></pre></td></tr></table></figure>

<p>新建.muttrc文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vim .muttrc</span><br></pre></td></tr></table></figure>

<p>.muttrc内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">set sendmail=<span class="string">&quot;/usr/bin/msmtp&quot;</span></span><br><span class="line">set use_from=yes</span><br><span class="line">#发件人名字</span><br><span class="line">set realname=<span class="string">&quot;Ryan Wang&quot;</span></span><br><span class="line">#发件人地址</span><br><span class="line">set from=xxxxxxxxx@<span class="number">163.</span>com </span><br><span class="line">set envelope_from=yes</span><br><span class="line">  </span><br><span class="line">set charset=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line">set send_charset=<span class="string">&quot;utf-8&quot;</span></span><br><span class="line"><span class="type">set</span> <span class="variable">content_type</span> <span class="operator">=</span> <span class="string">&quot;text/html\;charset=utf-8&quot;</span></span><br></pre></td></tr></table></figure>

<p>新建.msmtprc文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">vim .msmtprc</span><br></pre></td></tr></table></figure>

<p>获取网易邮箱授权码</p>
<ul>
<li>1.登录<a href="https://mail.163.com/">网易邮箱</a></li>
<li>2.进入设置界面</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212291722608.jpeg" alt="image.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212291724950.png" alt="image-20221229172418819"></p>
<ul>
<li>3.开启POP3&#x2F;SMTP服务，根据要求发送短信即可，然后网易会发送一个邮箱授权码（.msmtprc文件会使用到）</li>
</ul>
<p>.msmtprc内容</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">account <span class="keyword">default</span></span><br><span class="line">#代理邮箱服务器，这里以<span class="number">163</span>邮箱为例</span><br><span class="line">host smtp<span class="number">.163</span>.com</span><br><span class="line">#端口</span><br><span class="line">port <span class="number">465</span></span><br><span class="line">#同上发件人地址</span><br><span class="line">from xxxxxxxxx@<span class="number">163.</span>com</span><br><span class="line">tls_starttls off</span><br><span class="line">tls on</span><br><span class="line">tls_certcheck off</span><br><span class="line">#验证方式</span><br><span class="line">auth login</span><br><span class="line">#用户名</span><br><span class="line">user xxxxxxxxx@<span class="number">163.</span>com</span><br><span class="line">#邮箱授权码（网易提供邮箱授权码）</span><br><span class="line">password Sxxxxxxxxx</span><br></pre></td></tr></table></figure>

<p>设置.msmtprc文件权限</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">chmod <span class="number">600</span> .msmtprc</span><br></pre></td></tr></table></figure>

<p>测试发送邮件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">echo <span class="string">&quot;test message&quot;</span>|mutt -s <span class="string">&quot;test title&quot;</span> xxxxxxxxxx@<span class="number">163.</span>com</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212291722761.jpeg" alt="image.png"></p>
<p>MySQL数据库备份脚本文件</p>
<p>新建一个sh备份文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/cron.d</span><br><span class="line">vim mysql-backup-solo.sh</span><br></pre></td></tr></table></figure>

<p>mysl-backup-solo.sh内容如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">定义需要备份的数据库名</span></span><br><span class="line">dbname=solo</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库备份文件存放位置</span></span><br><span class="line">dbpath=/home/backup</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">定义备份数据库时使用的用户名和密码</span></span><br><span class="line">dbuser=username</span><br><span class="line">dbpasswd=password</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库备份的路径</span></span><br><span class="line">backuppath=$&#123;dbpath&#125;/mysql/$&#123;dbname&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">日志文件目录</span></span><br><span class="line">logpath=$&#123;dbpath&#125;/log/$&#123;dbname&#125;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库备份日志文件存储的路径</span></span><br><span class="line">logfile=$&#123;logpath&#125;/mysql.log</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">数据库IP地址</span></span><br><span class="line">dbhost=localhost</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">以当前的时间作为备份的数据库命名。</span></span><br><span class="line">dumpfile=$&#123;dbname&#125;_$(date +%y%m%d%H%M)</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这个函数用来备份数据库</span></span><br><span class="line">back_db()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">将备份的时间、数据库名存入日志</span></span><br><span class="line">  echo &quot;------&quot;$(date +%Y-%m-%d%t%A%t%T)&quot; Beginning database &quot;$&#123;dbname&#125;&quot; backup--------&quot; &gt;&gt;$&#123;logfile&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">备份数据库，如果有错误信息也记入日志。(此处为MySQL自带的备份数据位置)</span></span><br><span class="line">  /usr/local/mysql/bin/mysqldump -h$&#123;dbhost&#125; -u$&#123;dbuser&#125; -p$&#123;dbpasswd&#125; $&#123;dbname&#125; &gt;$&#123;backuppath&#125;/$&#123;dumpfile&#125;.sql 2&gt;&gt; $&#123;logfile&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">开始压缩数据文件</span></span><br><span class="line">  echo $(date +%Y-%m-%d%t%A%t%T)&quot; Beginning zip $&#123;backuppath&#125;/$&#123;dumpfile&#125;.sql&quot; &gt;&gt; $&#123;logfile&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">将备份数据库文件库压成ZIP文件，并删除先前的SQL文件。如果有错误信息也记入日志。</span></span><br><span class="line">  cd $&#123;backuppath&#125; &amp;&amp; tar -zcvf $&#123;dumpfile&#125;.tar.gz $&#123;dumpfile&#125;.sql &amp;&amp; rm $&#123;backuppath&#125;/$&#123;dumpfile&#125;.sql 2&gt;&gt; $&#123;logfile&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">将压缩后的文件名存入日志。</span></span><br><span class="line">  echo &quot;backup file name:&quot;$&#123;dumpfile&#125;&quot;.tar.gz&quot; &gt;&gt;$&#123;logfile&#125;</span><br><span class="line">  echo -e &quot;-------&quot;$(date +%Y-%m-%d%t%A%t%T)&quot; Ending database &quot;$&#123;dbname&#125;&quot; backup-------\n&quot; &gt;&gt;$&#123;logfile&#125;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">发送邮件</span></span><br><span class="line">  tail -n 50 $&#123;logfile&#125; | mutt -s &quot;Db BackUp&quot; xxxxxxxxx@163.com -a $&#123;backuppath&#125;/$&#123;dumpfile&#125;.tar.gz</span><br><span class="line">  echo &quot;tail -n 50 $&#123;logfile&#125; | mutt -s \&quot;Db BackUp\&quot; xxxxxxxxx@163.com -a $&#123;backuppath&#125;/$&#123;dumpfile&#125;.tar.gz&quot;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这个函数用来删除30天前的数据，注意，这个脚本会删除当前目录下所有的早于30天前的文件</span></span><br><span class="line">rm_oldfile()</span><br><span class="line">&#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">查找出当前目录下30天前生成的文件，并将之删除</span></span><br><span class="line">  find $&#123;backuppath&#125; -type f -mtime +30 -exec rm &#123;&#125; \;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if [ ! -d &quot;$&#123;backuppath&#125;&quot; ]; then</span><br><span class="line">   echo &quot;创建文件夹$&#123;backuppath&#125;&quot;</span><br><span class="line">   mkdir -p $&#123;backuppath&#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -d &quot;$&#123;logpath&#125;&quot; ]; then</span><br><span class="line">   echo &quot;创建文件夹$&#123;logpath&#125;&quot;</span><br><span class="line">   mkdir -p $&#123;logpath&#125;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换到数据库备份的目录。如果不做这个操作，压缩文件时有可能会错误</span></span><br><span class="line">cd $&#123;backuppath&#125;</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行备份数据函数</span></span><br><span class="line">back_db</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行删除文件函数</span></span><br><span class="line">rm_oldfile</span><br></pre></td></tr></table></figure>

<p>添加该文件的执行权限</p>
<p>chmod +x &#x2F;home&#x2F;cron.d&#x2F;mysql-backup-solo.sh</p>
<p>测试脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./mysql-backup-solo.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212291722783.jpeg" alt="image.png"></p>
<p>如图表示测试成功，可以在网易邮箱和服务器备份文件目录查看有一条备份数据</p>
<h2 id="编写定时任务"><a href="#编写定时任务" class="headerlink" title="编写定时任务"></a>编写定时任务</h2><p>执行以下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>在编辑器中输入以下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每天0时0分执行该命令</span></span><br><span class="line">0 0 * * * /home/cron.d/mysql-backup-solo.sh</span><br></pre></td></tr></table></figure>

<p>然后保存退出即可</p>
<p>使用命令查看定时任务是否存在</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212291722736.jpeg" alt="image.png"></p>
<p>如图表示成功，每天的0时0分就会执行定时任务通过脚本备份数据库并将备份文件发送至邮箱了。</p>
<p>crontab参数说明</p>
<table>
<thead>
<tr>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>*</th>
<th>command</th>
</tr>
</thead>
<tbody><tr>
<td>分钟</td>
<td>小时</td>
<td>几号</td>
<td>月份</td>
<td>星期几</td>
<td>需要执行的命令</td>
</tr>
<tr>
<td>取值范围（0-59之间的任何整数）</td>
<td>取值范围（0-23之间的任何整数）</td>
<td>取值范围（1-31之间的任何整数）</td>
<td>取值范围（1-12之间的任何整数）</td>
<td>取值范围（0-7之间的任何整数，这里的0或7代表星期天）</td>
<td>系统的命令或自己编写的命令</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>操作教程</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-Node安装教程</title>
    <url>/posts/35322/</url>
    <content><![CDATA[<h2 id="准备Node安装包"><a href="#准备Node安装包" class="headerlink" title="准备Node安装包"></a>准备Node安装包</h2><p><a href="https://nodejs.org/en/">Node下载地址</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212011352221.png" alt="image-20221201135233056"></p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212011353704.png" alt="image-20221201135306594"></p>
<p>追求稳定选择左边的，想要尝试新功能的选择右边，一般推荐选择稳定版本，新版本不确定会不会有bug。选择对应的版本进行下载即可。</p>
<h2 id="创建目录并解压"><a href="#创建目录并解压" class="headerlink" title="创建目录并解压"></a>创建目录并解压</h2><p>下载完成后上传至服务器指定位置，我这里是放在&#x2F;home&#x2F;software&#x2F;文件夹下。</p>
<p>在&#x2F;usr&#x2F;local&#x2F;下创建node文件夹并进入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir node</span><br><span class="line">cd node</span><br></pre></td></tr></table></figure>

<p>将node的安装包解压到&#x2F;usr&#x2F;local&#x2F;node中即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /home/software/node-v16.17.1-linux-x64.tar.xz -C ./</span><br></pre></td></tr></table></figure>

<p>解压完成之后，在&#x2F;usr&#x2F;local&#x2F;node的目录中会出现一个node-v16.17.1-linux-x64的目录。</p>
<h2 id="配置Node系统环境变量"><a href="#配置Node系统环境变量" class="headerlink" title="配置Node系统环境变量"></a>配置Node系统环境变量</h2><p>编辑 ~&#x2F;.bash_profile ⽂件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>

<p>在⽂件末尾追加如下信息:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Nodejs</span><br><span class="line">export PATH=/usr/local/node/node-v16.17.1-linux-x64/bin:$PATH</span><br></pre></td></tr></table></figure>

<p>保存退出，刷新环境变量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>

<h2 id="检查安装结果"><a href="#检查安装结果" class="headerlink" title="检查安装结果"></a>检查安装结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm version</span><br><span class="line">npx -v</span><br></pre></td></tr></table></figure>

<p>均有版本信息输出即可</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202212051048798.png" alt="image-20221205104814718"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-Maven安装教程</title>
    <url>/posts/55029/</url>
    <content><![CDATA[<h2 id="准备Maven安装资源"><a href="#准备Maven安装资源" class="headerlink" title="准备Maven安装资源"></a>准备Maven安装资源</h2><p><a href="https://archive.apache.org/dist/maven/maven-3/">Maven3下载地址</a>，我这里选择的版本是 apache-maven-3.6.3-bin.tar.gz。</p>
<p>将下载好的压缩文件上传至服务器指定目录下，我这里是上传到&#x2F;home&#x2F;software目录下。</p>
<span id="more"></span>

<h2 id="安装Maven"><a href="#安装Maven" class="headerlink" title="安装Maven"></a>安装Maven</h2><p>安装Maven需要依赖Java环境，如果没有安装Java环境会导致安装不成功。如果没有安装Java环境请参考 <a href="https://blog.ifreesync.top/post/47ad.html">Linux JDK安装教程</a>。</p>
<p>在&#x2F;usr&#x2F;local&#x2F;目录下新建一个maven文件夹并进入该文件目录下，将我们刚刚准备好的压缩文件解压到该目录下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir maven</span><br><span class="line">cd maven</span><br><span class="line">tar -zxvf apache-maven-3.6.3-bin.tar.gz -C ./</span><br></pre></td></tr></table></figure>

<h2 id="配置阿里云镜像"><a href="#配置阿里云镜像" class="headerlink" title="配置阿里云镜像"></a>配置阿里云镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 进入到maven的配置文件夹下</span><br><span class="line">cd /usr/local/maven/apache-maven-3.6.3/conf</span><br><span class="line"># 编辑配置文件</span><br><span class="line">vim settings.xml</span><br><span class="line"># 在 &lt;mirrors&gt;&lt;/mirrors&gt; 标签对⾥添加如下内容即可：</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line"> &lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line"> &lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line"> &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line"> &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211221044636.png" alt="image-20221122104447453"></p>
<h2 id="配置Maven环境变量"><a href="#配置Maven环境变量" class="headerlink" title="配置Maven环境变量"></a>配置Maven环境变量</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 编辑环境变量配置文件</span><br><span class="line">vim /etc/profile</span><br><span class="line"># 在文件尾部加入如下配置，保存并退出（ESC+:wq）。</span><br><span class="line"># Maven环境变量配置</span><br><span class="line">export MAVEN_HOME=/usr/local/maven/apache-maven-3.6.3</span><br><span class="line">export PATH=$MAVEN_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211221050947.png" alt="image-20221122105010856"></p>
<p>刷新配置文件，使配置文件生效。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="检验安装结果"><a href="#检验安装结果" class="headerlink" title="检验安装结果"></a>检验安装结果</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn -v</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211221052956.png" alt="image-20221122105233906"></p>
<p>如图所示表示安装成功。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-JDK安装教程</title>
    <url>/posts/64851/</url>
    <content><![CDATA[<h2 id="卸载已有的OPEN-JDK"><a href="#卸载已有的OPEN-JDK" class="headerlink" title="卸载已有的OPEN JDK"></a>卸载已有的OPEN JDK</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 输入以下命令检查是否存在open jdk</span><br><span class="line">rpm -qa | grep java</span><br><span class="line"># 如果存在，则删除</span><br><span class="line">yum -y remove 对应open jdk的名称</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h2><p><a href="https://www.oracle.com/">Oracle官网地址</a></p>
<p>我这里选择的版本是<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html#license-lightbox">jdk-8u341-linux-x64.tar.gz</a>，如果要选择其他版本可自行选择下载。</p>
<p>下载完成后，使用fxtp工具将下载的压缩文件上传至你服务器指定的文件夹下，我这里是&#x2F;home&#x2F;software。</p>
<h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p>1、在&#x2F;usr&#x2F;local&#x2F;下创建java文件夹并进入。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/</span><br><span class="line">mkdir java</span><br><span class="line">cd java</span><br></pre></td></tr></table></figure>

<p>2、将上面准备好的JDK安装包解压到&#x2F;usr&#x2F;lcoal&#x2F;java 文件夹下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf /home/software/jdk-8u341-linux-x64.tar.gz -C ./</span><br></pre></td></tr></table></figure>

<p>解压完成后，&#x2F;usr&#x2F;local&#x2F;java的文件夹下会出现一个jdk1.8.0_341的目录。</p>
<h2 id="配置JDK环境变量"><a href="#配置JDK环境变量" class="headerlink" title="配置JDK环境变量"></a>配置JDK环境变量</h2><p>编辑&#x2F;etc&#x2F;profile文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure>

<p>在文件的末尾加入如下配置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Java环境变量设置</span><br><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_341</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure>

<p>保存并退出（ESC+:wq）</p>
<p>使配置文件生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<h2 id="验证JDK安装结果"><a href="#验证JDK安装结果" class="headerlink" title="验证JDK安装结果"></a>验证JDK安装结果</h2><p>依次输入下面的命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java</span><br><span class="line">javac</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>

<p>出现下面的界面代表安装成功。</p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211102019581.png" alt="image-20221110201901523"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211102019656.png" alt="image-20221110201959596"></p>
<p><img src="https://cdn.jsdelivr.net/gh/ifreesync/blog-images/202211102020551.png" alt="image-20221110202018519"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
        <tag>JDK</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux环境搭建-Git安装教程</title>
    <url>/posts/10982/</url>
    <content><![CDATA[<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">服务器：阿里云服务器</span><br><span class="line">CentOS版本：CentOS 7.6</span><br></pre></td></tr></table></figure>

<h2 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装git</span><br><span class="line">yum install git</span><br><span class="line"># 查看版本号</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>使用yum方法安装方式一般版本比较老</p>
<span id="more"></span>

<h2 id="安装指定版本git"><a href="#安装指定版本git" class="headerlink" title="安装指定版本git"></a>安装指定版本git</h2><p><a href="https://git-scm.com/download/linux">git下载</a></p>
<p>选择自己需要的版本进行下载，下载完成后上传至服务器指定文件下，我这里上传到&#x2F;home&#x2F;software目录下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 解压安装包</span><br><span class="line">tar -zxvf git-2.38.0.tar.gz </span><br><span class="line"># 安装依赖</span><br><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br><span class="line"># 查看git版本号</span><br><span class="line">git --version</span><br><span class="line"># 安装依赖时，自动安装了老的git版本，进行卸载。</span><br><span class="line">yum remove git</span><br><span class="line"># 进入解压后的git文件夹</span><br><span class="line">cd git-2.38.0</span><br><span class="line"># 执行编译</span><br><span class="line">make prefix=/usr/local/git all</span><br><span class="line"># 安装git至/usr/local/git目录</span><br><span class="line">make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure>

<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>编辑profile文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 编辑环境变量配置</span><br><span class="line">vim /etc/profile</span><br><span class="line"># 输入i，在适当位置加入</span><br><span class="line"># Git环境变量配置</span><br><span class="line">export GIT_HOME=/usr/local/git</span><br><span class="line">export PATH=$PATH:$GIT_HOME/bin</span><br><span class="line"># 保存，退出。按键盘ESC键并在命令框内输入:wq回车</span><br></pre></td></tr></table></figure>

<h2 id="刷新配置文件"><a href="#刷新配置文件" class="headerlink" title="刷新配置文件"></a>刷新配置文件</h2><p>刷新配置文件，使配置立即生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 刷新配置文件，使配置立即生效</span><br><span class="line">source /etc/profire</span><br><span class="line"># 查看git版本号</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>至此我们的git就安装好了。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>运维</tag>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/posts/48230/</url>
    <content><![CDATA[<h2 id="关机-重启-注销"><a href="#关机-重启-注销" class="headerlink" title="关机&#x2F;重启&#x2F;注销"></a>关机&#x2F;重启&#x2F;注销</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>shutdown -h now</td>
<td>即刻关机</td>
</tr>
<tr>
<td>shutdown - h 10</td>
<td>10分钟后关机</td>
</tr>
<tr>
<td>shutdown -h 11:00</td>
<td>11:00关机</td>
</tr>
<tr>
<td>shutdown -h +10</td>
<td>设定时间关机（10分钟后）</td>
</tr>
<tr>
<td>shutdown -c</td>
<td>取消指定时间关机</td>
</tr>
<tr>
<td>shutdown -r now</td>
<td>重启</td>
</tr>
<tr>
<td>shutdown -r 10</td>
<td>10分钟之后重启</td>
</tr>
<tr>
<td>shutdown -r 11:00</td>
<td>定时重启（11:00）</td>
</tr>
<tr>
<td>reboot</td>
<td>重启</td>
</tr>
<tr>
<td>init 6</td>
<td>重启</td>
</tr>
<tr>
<td>init 0</td>
<td>立刻关机</td>
</tr>
<tr>
<td>telinit 0</td>
<td>关机</td>
</tr>
<tr>
<td>poweroff</td>
<td>立刻关机</td>
</tr>
<tr>
<td>halt</td>
<td>关机</td>
</tr>
<tr>
<td>sync</td>
<td>buff数据同步到磁盘</td>
</tr>
<tr>
<td>logout</td>
<td>退出登录shell</td>
</tr>
</tbody></table>
<span id="more"></span>

<h2 id="系统信息和性能查看"><a href="#系统信息和性能查看" class="headerlink" title="系统信息和性能查看"></a>系统信息和性能查看</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>uname -a</td>
<td>查看内核&#x2F;OS&#x2F;CPU信息</td>
</tr>
<tr>
<td>uname -r</td>
<td>查看内核版本</td>
</tr>
<tr>
<td>uname -m</td>
<td>查看处理器架构</td>
</tr>
<tr>
<td>arch</td>
<td>查看处理器架构</td>
</tr>
<tr>
<td>hostname</td>
<td>查看计算机名称</td>
</tr>
<tr>
<td>who</td>
<td>显示当前登录系统的用户</td>
</tr>
<tr>
<td>who am i</td>
<td>显示登录时的用户名</td>
</tr>
<tr>
<td>whoami</td>
<td>显示当前用户名</td>
</tr>
<tr>
<td>cat &#x2F;proc&#x2F;version</td>
<td>查看Linux版本信息</td>
</tr>
<tr>
<td>cat &#x2F;proc&#x2F;cpuinfo</td>
<td>查看CPU信息</td>
</tr>
<tr>
<td>cat &#x2F;proc&#x2F;interrupts</td>
<td>查看中断</td>
</tr>
<tr>
<td>cat &#x2F;proc&#x2F;loadavg</td>
<td>查看系统负载</td>
</tr>
<tr>
<td>uptime</td>
<td>查看系统运行时间、用户数量、负载</td>
</tr>
<tr>
<td>env</td>
<td>查看系统的环境变量</td>
</tr>
<tr>
<td>lsusb -tv</td>
<td>查看系统USB设备信息</td>
</tr>
<tr>
<td>lspci -tv</td>
<td>查看系统PCI设备信息</td>
</tr>
<tr>
<td>lsmod</td>
<td>查看已加载的系统模块</td>
</tr>
<tr>
<td>grep MemTotal &#x2F;proc&#x2F;meminfo</td>
<td>查看内存总量</td>
</tr>
<tr>
<td>grep MemFree &#x2F;proc&#x2F;meminfo</td>
<td>查看空闲内存量</td>
</tr>
<tr>
<td>free -m</td>
<td>查看内存用量和交换区用量</td>
</tr>
<tr>
<td>date</td>
<td>显示系统日期时间</td>
</tr>
<tr>
<td>cal 2021</td>
<td>显示2021日历表</td>
</tr>
<tr>
<td>top</td>
<td>动态显示CPU&#x2F;内存&#x2F;进程等情况</td>
</tr>
<tr>
<td>vmstat 1 20</td>
<td>每1秒采集一次系统状态，采集20次</td>
</tr>
<tr>
<td>iostat</td>
<td>查看IO读写&#x2F;CPU使用情况</td>
</tr>
<tr>
<td>sar -u 1 10</td>
<td>查询CPU使用情况（1秒一次，共10次）</td>
</tr>
<tr>
<td>sar -d 1 10</td>
<td>查看磁盘性能（1秒一次，共10次）</td>
</tr>
</tbody></table>
<h2 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>fdisk -l</td>
<td>查看所有磁盘分区</td>
</tr>
<tr>
<td>swapon -s</td>
<td>查看所有交换分区</td>
</tr>
<tr>
<td>df -h</td>
<td>查看磁盘使用情况及挂载点</td>
</tr>
<tr>
<td>df -hl</td>
<td>查看磁盘使用情况及挂载点</td>
</tr>
<tr>
<td>du -sh &#x2F;dir</td>
<td>查看某个指定目录的大小</td>
</tr>
<tr>
<td>du -sk *| sort -rn</td>
<td>从高到低依次显示文件和目录大小</td>
</tr>
<tr>
<td>mount &#x2F;dev&#x2F;data2 &#x2F;home&#x2F;data2</td>
<td>挂载data2盘</td>
</tr>
<tr>
<td>mount -t ntfs &#x2F;dev&#x2F;src1 &#x2F;home&#x2F;usbhd1</td>
<td>指定文件系统类型挂载（ntfs）</td>
</tr>
<tr>
<td>mount -o loop xxx.iso &#x2F;home&#x2F;cdrom</td>
<td>挂载iso文件</td>
</tr>
<tr>
<td>mount &#x2F;dev&#x2F;sda1 &#x2F;home&#x2F;usbdisk</td>
<td>挂载USB盘&#x2F;闪存设备</td>
</tr>
<tr>
<td>umount -v &#x2F;dev&#x2F;sda1</td>
<td>通过设备名称卸载</td>
</tr>
<tr>
<td>umount -v &#x2F;home&#x2F;mymnt</td>
<td>通过挂载点卸载</td>
</tr>
<tr>
<td>fuser -km &#x2F;home&#x2F;hda1</td>
<td>强制卸载（慎用）</td>
</tr>
</tbody></table>
<h2 id="用户和用户组"><a href="#用户和用户组" class="headerlink" title="用户和用户组"></a>用户和用户组</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>useradd codingboys</td>
<td>创建用户（codingboys）</td>
</tr>
<tr>
<td>userdel -r codingboys</td>
<td>删除用户（codingboys）</td>
</tr>
<tr>
<td>usermod -g group_name user_name</td>
<td>修改用户的组</td>
</tr>
<tr>
<td>usermod -aG group_name user_name</td>
<td>将用户添加到组</td>
</tr>
<tr>
<td>usermod -s &#x2F;bin&#x2F;ksh -d &#x2F;home&#x2F;codingboys -g dev codingboys</td>
<td>修改用户codingboys的登录Shell、主目录已经用户组</td>
</tr>
<tr>
<td>groups test</td>
<td>查看test用户所在的组</td>
</tr>
<tr>
<td>groupadd group_name</td>
<td>创建用户组</td>
</tr>
<tr>
<td>groupdel group_name</td>
<td>删除用户组</td>
</tr>
<tr>
<td>groupmod -n new_name old_name</td>
<td>重命名用户组</td>
</tr>
<tr>
<td>su - user_name</td>
<td>完整切换到一个用户环境</td>
</tr>
<tr>
<td>passwd</td>
<td>修改口令</td>
</tr>
<tr>
<td>passwd codingboys</td>
<td>修改某个用户的口令</td>
</tr>
<tr>
<td>w</td>
<td>查看用户活动</td>
</tr>
<tr>
<td>id codingboys</td>
<td>查看指定用户codingboys的信息</td>
</tr>
<tr>
<td>last</td>
<td>查看用户登录日志</td>
</tr>
<tr>
<td>crontab -l</td>
<td>查看当前用户的计划任务</td>
</tr>
<tr>
<td>cut -d: -f1 &#x2F;etc&#x2F;passwd</td>
<td>查看系统所有用户</td>
</tr>
<tr>
<td>cut -d: -f1 &#x2F;etc&#x2F;group</td>
<td>查看系统所有组</td>
</tr>
</tbody></table>
<h2 id="网络和进程管理"><a href="#网络和进程管理" class="headerlink" title="网络和进程管理"></a>网络和进程管理</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>ifconfig</td>
<td>查看网络接口属性</td>
</tr>
<tr>
<td>ifconfig eth0</td>
<td>查看某个网卡的配置</td>
</tr>
<tr>
<td>route -n</td>
<td>查看路由表</td>
</tr>
<tr>
<td>netstat -lntp</td>
<td>查看所有监听端口</td>
</tr>
<tr>
<td>netstat -antp</td>
<td>查看已建立的TCP连接</td>
</tr>
<tr>
<td>netstat -lutp</td>
<td>查看TCP&#x2F;UDP的状态信息</td>
</tr>
<tr>
<td>ifup eth0</td>
<td>启用eth0的网络设备</td>
</tr>
<tr>
<td>ifdown eth0</td>
<td>禁用eth0的网络设备</td>
</tr>
<tr>
<td>iptables -L</td>
<td>查看iptables规则</td>
</tr>
<tr>
<td>ifconfig eth0 127.0.0.1 netmask 255.255.255.0</td>
<td>配置ip地址</td>
</tr>
<tr>
<td>dhclient eth0</td>
<td>以dhcp模式启用eth0</td>
</tr>
<tr>
<td>route add -net 0&#x2F;0 gw Gateway_IP</td>
<td>配置默认网关</td>
</tr>
<tr>
<td>route add -net 192.168.2.14 netmask 255.255.0.0 gw 192.168.2.184</td>
<td>配置静态路由到达网络’192.168.2.14&#x2F;16’</td>
</tr>
<tr>
<td>route del 0&#x2F;0 gw Gateway_IP</td>
<td>删除静态路由</td>
</tr>
<tr>
<td>hostname</td>
<td>查看主机名</td>
</tr>
<tr>
<td>host <a href="http://www.ifreesync.top/">www.ifreesync.top</a></td>
<td>解析主机名</td>
</tr>
<tr>
<td>nslookup <a href="http://www.ifreesync.top/">www.ifreesync.top</a></td>
<td>查看DNS记录，查看域名解析是否正常</td>
</tr>
<tr>
<td>ps -ef</td>
<td>查看所有进程</td>
</tr>
<tr>
<td>ps -ef| grep java</td>
<td>查看指定进程（Java）</td>
</tr>
<tr>
<td>kill -s name</td>
<td>kill指定名称的进程</td>
</tr>
<tr>
<td>kill -s pid</td>
<td>kill指定pid的进程</td>
</tr>
<tr>
<td>top</td>
<td>实时显示进程状态</td>
</tr>
<tr>
<td>vmstat 1 20</td>
<td>每1秒采集一次系统状态，采集20次</td>
</tr>
<tr>
<td>iostat</td>
<td>查看IO读写&#x2F;CPU使用情况</td>
</tr>
<tr>
<td>sar -u 1 10</td>
<td>查询CPU使用情况（1秒一次，共10次）</td>
</tr>
<tr>
<td>sar -d 1 10</td>
<td>查询磁盘性能（1秒一次，共10次）</td>
</tr>
</tbody></table>
<h2 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>chkconfig –list</td>
<td>列出系统服务列表</td>
</tr>
<tr>
<td>service service_name status</td>
<td>查看某个服务的状态</td>
</tr>
<tr>
<td>service service_name start</td>
<td>启动某个服务</td>
</tr>
<tr>
<td>service service_name stop</td>
<td>终止某个服务</td>
</tr>
<tr>
<td>service service_name restart</td>
<td>重启某个服务</td>
</tr>
<tr>
<td>systemctl status service_neme</td>
<td>查看某个服务的状态</td>
</tr>
<tr>
<td>systemctl start service_neme</td>
<td>启动某个服务</td>
</tr>
<tr>
<td>systemctl stop service_neme</td>
<td>终止某个服务</td>
</tr>
<tr>
<td>systemctl restart service_neme</td>
<td>重启某个服务</td>
</tr>
<tr>
<td>systemctl enable service_neme</td>
<td>将某个服务开启为自启动</td>
</tr>
<tr>
<td>systemctl disable service_neme</td>
<td>将某个服务关闭自启动</td>
</tr>
</tbody></table>
<h2 id="文件和目录操作"><a href="#文件和目录操作" class="headerlink" title="文件和目录操作"></a>文件和目录操作</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>cd dir</td>
<td>进入某个目录</td>
</tr>
<tr>
<td>cd ..</td>
<td>返回上级目录</td>
</tr>
<tr>
<td>cd ..&#x2F;..</td>
<td>返回上两级目录</td>
</tr>
<tr>
<td>cd</td>
<td>进入主目录</td>
</tr>
<tr>
<td>cd -</td>
<td>返回上一级所在目录</td>
</tr>
<tr>
<td>pwd</td>
<td>显示当前目录路径</td>
</tr>
<tr>
<td>ls</td>
<td>查看文件目录列表</td>
</tr>
<tr>
<td>ls -F</td>
<td>查看目录中内容（显示是文件还是目录）</td>
</tr>
<tr>
<td>ls -l</td>
<td>查看文件和目录的详情列表</td>
</tr>
<tr>
<td>ls -a</td>
<td>查看隐藏文件</td>
</tr>
<tr>
<td>ls -lh</td>
<td>查看文件和目录的详情列表（增强文件大小易读性）</td>
</tr>
<tr>
<td>ls -lSr</td>
<td>查看文件和目录列表（以文件大小升序查看）</td>
</tr>
<tr>
<td>tree</td>
<td>查看文件和目录的树形结构</td>
</tr>
<tr>
<td>mkdir dirname</td>
<td>创建目录</td>
</tr>
<tr>
<td>mkdir dir1 dir2</td>
<td>同时创建两个目录</td>
</tr>
<tr>
<td>mkdir -p &#x2F;tmp&#x2F;dir1&#x2F;dir2</td>
<td>创建目录树</td>
</tr>
<tr>
<td>rm -f file1</td>
<td>删除’file1’文件</td>
</tr>
<tr>
<td>rmdir dir1</td>
<td>删除’dir1’目录</td>
</tr>
<tr>
<td>rm -rf dir1</td>
<td>删除’dir1’目录及其内容</td>
</tr>
<tr>
<td>rm -rf dir1 dir2</td>
<td>同时删除两个目录及其内容</td>
</tr>
<tr>
<td>mv old_dir new_dir</td>
<td>重命名&#x2F;移动目录</td>
</tr>
<tr>
<td>cp file1 file2</td>
<td>复制文件</td>
</tr>
<tr>
<td>cp dir&#x2F;* .</td>
<td>复制某个文件夹下的所有文件至当前目录</td>
</tr>
<tr>
<td>cp -a dir1 dir2</td>
<td>复制目录</td>
</tr>
<tr>
<td>cp -a &#x2F;tmp&#x2F;dir1 .</td>
<td>复制一个目录至当前目录</td>
</tr>
<tr>
<td>ln -s file1 link1</td>
<td>创建指向文件&#x2F;目录的软链接</td>
</tr>
<tr>
<td>ln file1 lnk1</td>
<td>创建指向文件&#x2F;目录的物理链接</td>
</tr>
<tr>
<td>find &#x2F; -name file1</td>
<td>从根目录开始搜索文件&#x2F;目录</td>
</tr>
<tr>
<td>find &#x2F; user user1</td>
<td>搜索用户user1的文件&#x2F;目录</td>
</tr>
<tr>
<td>find &#x2F;dir -name *.bin</td>
<td>在目录&#x2F;dir中搜索带有.bin后缀的文件</td>
</tr>
<tr>
<td>locate &lt;关键词&gt;</td>
<td>快速定位文件</td>
</tr>
<tr>
<td>locate *.mp4</td>
<td>寻找.mp4结尾的文件</td>
</tr>
<tr>
<td>whereis &lt;关键词&gt;</td>
<td>显示二进制文件&#x2F;可执行文件的路径</td>
</tr>
<tr>
<td>which &lt;关键词&gt;</td>
<td>查找系统目录下的二进制文件</td>
</tr>
<tr>
<td>chmod ugo+rwx dir1</td>
<td>设置目录所有者（u）、群组（g）及其他人（o）的读（r）写（w）执行（x）权限</td>
</tr>
<tr>
<td>chmod go-rwx dir1</td>
<td>移除群组（g）与其他人（o）对目录的读写执行权限</td>
</tr>
<tr>
<td>chown user1 file1</td>
<td>改变文件的所有者属性</td>
</tr>
<tr>
<td>chown -R user1</td>
<td>改变目录的所有者属性</td>
</tr>
<tr>
<td>chgrp group1 file1</td>
<td>改变文件群组</td>
</tr>
<tr>
<td>chown user1:group1 file1</td>
<td>改变文件的所有人和群组</td>
</tr>
</tbody></table>
<h2 id="文件查看和处理"><a href="#文件查看和处理" class="headerlink" title="文件查看和处理"></a>文件查看和处理</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>cat file1</td>
<td>查看文件内容</td>
</tr>
<tr>
<td>cat -n file1</td>
<td>查看内容并标识行数</td>
</tr>
<tr>
<td>cat xxx.txt</td>
<td>awk ‘NR%2&#x3D;&#x3D;1’</td>
</tr>
<tr>
<td>tac file1</td>
<td>从最后一行开始反看文件内容</td>
</tr>
<tr>
<td>more file1</td>
<td>查看一个长文件的内容</td>
</tr>
<tr>
<td>less file1</td>
<td>类似more命令，但允许反向操作</td>
</tr>
<tr>
<td>head -2 file1</td>
<td>查看文件前两行</td>
</tr>
<tr>
<td>tail -2 file1</td>
<td>查看文件后两行</td>
</tr>
<tr>
<td>tail -f &#x2F;log&#x2F;msg</td>
<td>实时查看添加到文件中的内容</td>
</tr>
<tr>
<td>grep codingboys hello.txt</td>
<td>在文件hello.txt中查找关键词codingboys</td>
</tr>
<tr>
<td>grep ^codingboys hello.txt</td>
<td>在文件hello.txt中查找以codingboys开头的内容</td>
</tr>
<tr>
<td>grep [0-9] hello.txt</td>
<td>选择hello.txt文件中所有包含数字的行</td>
</tr>
<tr>
<td>sed ‘s&#x2F;s1&#x2F;s2&#x2F;g’ hello.txt</td>
<td>将hello.txt文件中的s1替换为s2</td>
</tr>
<tr>
<td>sed ‘&#x2F;^$&#x2F;d’ hello.txt</td>
<td>从hello.txt文件中删除所有的空白行</td>
</tr>
<tr>
<td>sed ‘&#x2F; *#&#x2F;d;&#x2F;^$&#x2F;d’ hello.txt</td>
<td>从hello.txt文件中删除所有注释的空白行</td>
</tr>
<tr>
<td>sed -e ‘1d’ hello.txt</td>
<td>从hello.txt文件中删除第一行</td>
</tr>
<tr>
<td>sed -n ‘&#x2F;s1&#x2F;p’ hello.txt</td>
<td>查看只包含关键词’s1’的行</td>
</tr>
<tr>
<td>sed -e ‘s&#x2F; *$&#x2F;&#x2F;‘ hello.txt</td>
<td>删除每一行最后的空白字符</td>
</tr>
<tr>
<td>sed -e ‘s&#x2F;s1&#x2F;&#x2F;g’ hello.txt</td>
<td>从文档中只删除词汇s1并保留剩余全部</td>
</tr>
<tr>
<td>sed -n ‘1,5p;5q’ hello.txt</td>
<td>查看从第一行到第五行的内容</td>
</tr>
<tr>
<td>sed -n ‘5p;5q’ hello.txt</td>
<td>查看第五行</td>
</tr>
<tr>
<td>paste file1 file2</td>
<td>合并两个文件或两栏的内容</td>
</tr>
<tr>
<td>paste -d ‘+’ file1 file2</td>
<td>合并两个文件或两栏的内容，中间用“+”区分</td>
</tr>
<tr>
<td>sort file1 file2</td>
<td>排序两个文件的内容</td>
</tr>
<tr>
<td>sort file1 file2</td>
<td>uniq</td>
</tr>
<tr>
<td>sort file1 file2</td>
<td>uniq -u</td>
</tr>
<tr>
<td>sort file1 file2</td>
<td>uniq -d</td>
</tr>
<tr>
<td>comm -1 file1 file2</td>
<td>比较两个文件的内容（去除’file1’所含内容）</td>
</tr>
<tr>
<td>comm -2 file1 file2</td>
<td>比较两个文件的内容（去除’file2’所含内容）</td>
</tr>
<tr>
<td>comm -3 file1 file2</td>
<td>比较两个文件的内容（去除两文件共有部分）</td>
</tr>
</tbody></table>
<h2 id="打包和解压"><a href="#打包和解压" class="headerlink" title="打包和解压"></a>打包和解压</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>zip xxx.zip file</td>
<td>压缩至zip包</td>
</tr>
<tr>
<td>zip -r xxx.zip file1 file2 dir1</td>
<td>将多个文件+目录压成zip包</td>
</tr>
<tr>
<td>unzip xxx.zip</td>
<td>解压zip包</td>
</tr>
<tr>
<td>tar -cvf xxx.tar file</td>
<td>创建非压缩tar包</td>
</tr>
<tr>
<td>tar -cvf xxx.tar file1 file2 dir1</td>
<td>将多个文件+目录打tar包</td>
</tr>
<tr>
<td>tar -tf xxx.tar</td>
<td>查看tar包的内容</td>
</tr>
<tr>
<td>tar -xvf xxx.tar</td>
<td>解压tar包</td>
</tr>
<tr>
<td>tar -xvf xxx.tar -C &#x2F;dir</td>
<td>将tar包解压到指定目录</td>
</tr>
<tr>
<td>tar -cvfj xxx.tar.bz2 dir</td>
<td>创建bz2压缩包</td>
</tr>
<tr>
<td>tar -jxvf xxx.tar.bz2</td>
<td>解压bz2压缩包</td>
</tr>
<tr>
<td>tar -cvfz xxx.tar.gz dir</td>
<td>创建gzip压缩包</td>
</tr>
<tr>
<td>tar -zxvf xxx.tar.gz</td>
<td>解压gzip压缩包</td>
</tr>
<tr>
<td>bunzip2 xxx.bz2</td>
<td>解压bz2压缩包</td>
</tr>
<tr>
<td>bzip2 filename</td>
<td>压缩文件</td>
</tr>
<tr>
<td>gunzip xxx.gz</td>
<td>解压gzip压缩包</td>
</tr>
<tr>
<td>gzip filename</td>
<td>压缩文件</td>
</tr>
<tr>
<td>gzip -9 filename</td>
<td>最大程度压缩</td>
</tr>
</tbody></table>
<h2 id="RPM包命令管理"><a href="#RPM包命令管理" class="headerlink" title="RPM包命令管理"></a>RPM包命令管理</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>rpm -qa</td>
<td>查看已安装的rpm包</td>
</tr>
<tr>
<td>rpm -q pkg_name</td>
<td>查询某个rpm包</td>
</tr>
<tr>
<td>rpm -q –whatprovides xxx</td>
<td>显示xxx功能是由哪个包提供的</td>
</tr>
<tr>
<td>rpm -q –whatrequires xxx</td>
<td>显示xxx功能被哪个程序包依赖的</td>
</tr>
<tr>
<td>rpm -q changelog xxx</td>
<td>显示xxx包的更改日志</td>
</tr>
<tr>
<td>rpm -qi pkg_name</td>
<td>查看一个包的详细信息</td>
</tr>
<tr>
<td>rpm -qd pkg_name</td>
<td>查看一个包所提供的文档</td>
</tr>
<tr>
<td>rpm -qc pkg_name</td>
<td>查看已安装rpm包所提供的配置文件</td>
</tr>
<tr>
<td>rpm -ql pkg_name</td>
<td>查看一个包安装了哪些文件</td>
</tr>
<tr>
<td>rpm -qf filename</td>
<td>查看某个文件属于哪个包</td>
</tr>
<tr>
<td>rpm -qR pkg_name</td>
<td>查看包的依赖关系</td>
</tr>
<tr>
<td>rpm -ivh xxx.rpm</td>
<td>安装rpm包</td>
</tr>
<tr>
<td>rpm -ivh –test xxx.rpm</td>
<td>测试安装rpm包</td>
</tr>
<tr>
<td>rpm -ivh –nodeps xxx.rpm</td>
<td>安装rpm包是忽略依赖关系</td>
</tr>
<tr>
<td>rpm -e xxx</td>
<td>卸载rpm程序包</td>
</tr>
<tr>
<td>rpm -Fvh pkg_name</td>
<td>升级确定已安装的rpm包</td>
</tr>
<tr>
<td>rpm -Uvh pkg_name</td>
<td>升级rpm包（若未安装则会安装）</td>
</tr>
<tr>
<td>rpm -V pkg_name</td>
<td>rpm包详细信息校验</td>
</tr>
</tbody></table>
<h2 id="YUM包命令管理"><a href="#YUM包命令管理" class="headerlink" title="YUM包命令管理"></a>YUM包命令管理</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>yum repolist enabled</td>
<td>显示可用的源仓库</td>
</tr>
<tr>
<td>yum search pkg_name</td>
<td>搜索软件包</td>
</tr>
<tr>
<td>yum install pkg_name</td>
<td>下载并安装软件包</td>
</tr>
<tr>
<td>yum install –downloadonly pkg_name</td>
<td>只下载不安装</td>
</tr>
<tr>
<td>yum list</td>
<td>显示所有程序包</td>
</tr>
<tr>
<td>yum list installed</td>
<td>查看当前系统已安装的软件包</td>
</tr>
<tr>
<td>yum list updates</td>
<td>查看可以更新的软件包列表</td>
</tr>
<tr>
<td>yum check -update</td>
<td>查看可升级的软件包</td>
</tr>
<tr>
<td>yum update</td>
<td>更新所有的软件包</td>
</tr>
<tr>
<td>yum update pkg_name</td>
<td>升级指定的软件包</td>
</tr>
<tr>
<td>yum deplist pkg_name</td>
<td>列出软件包依赖关系</td>
</tr>
<tr>
<td>yum remove pkg_name</td>
<td>删除指定软件包</td>
</tr>
<tr>
<td>yum clean all</td>
<td>清除缓存</td>
</tr>
<tr>
<td>yum clean packages</td>
<td>清除缓存的软件包</td>
</tr>
<tr>
<td>yum clean headers</td>
<td>清除缓存的header</td>
</tr>
</tbody></table>
<h2 id="DPKG包命令管理"><a href="#DPKG包命令管理" class="headerlink" title="DPKG包命令管理"></a>DPKG包命令管理</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>dpkg -c xxx.deb</td>
<td>列出deb包的内容</td>
</tr>
<tr>
<td>dpkg -i xxx.deb</td>
<td>安装&#x2F;更新deb包</td>
</tr>
<tr>
<td>dpkg -r pkg_name</td>
<td>移除deb包</td>
</tr>
<tr>
<td>dpkg -P pkg_name</td>
<td>移除deb包（不保留配置）</td>
</tr>
<tr>
<td>dpkg -l</td>
<td>查看系统中已安装deb包</td>
</tr>
<tr>
<td>dpkg -l pkg_name</td>
<td>显示包的大致信息</td>
</tr>
<tr>
<td>dpkg -L pkg_name</td>
<td>查看deb包安装的文件</td>
</tr>
<tr>
<td>dpkg -s pkg_name</td>
<td>查看包的详细信息</td>
</tr>
<tr>
<td>dpkg -unpack xxx.deb</td>
<td>解开deb包的内容</td>
</tr>
</tbody></table>
<h2 id="APT软件工具"><a href="#APT软件工具" class="headerlink" title="APT软件工具"></a>APT软件工具</h2><table>
<thead>
<tr>
<th><strong>命令</strong></th>
<th><strong>作用</strong></th>
</tr>
</thead>
<tbody><tr>
<td>apt-cache search pkg_name</td>
<td>搜索程序包</td>
</tr>
<tr>
<td>apt-cache show pkg_name</td>
<td>获取包的概览信息</td>
</tr>
<tr>
<td>apt-get install pkg_name</td>
<td>安装&#x2F;升级软件包</td>
</tr>
<tr>
<td>apt-get purge pkg_name</td>
<td>卸载软件（包括配置）</td>
</tr>
<tr>
<td>apt-get remove pkg_name</td>
<td>卸载软件（不包括配置）</td>
</tr>
<tr>
<td>apt-get update</td>
<td>更新包索引信息</td>
</tr>
<tr>
<td>apt-get upgrade</td>
<td>更新已安装软件包</td>
</tr>
<tr>
<td>apt-get clean</td>
<td>清理缓存</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>服务器</tag>
        <tag>常用命令</tag>
      </tags>
  </entry>
</search>
